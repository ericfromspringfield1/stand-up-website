{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Events/EventsList.js\";\nimport React, { Component } from 'react'; //import the components we will need\n\nimport EventsCard from './EventsCard';\nimport EventsManager from '../../modules/EventsManager';\nimport \"./Events.css\";\n\nvar EventsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventsList, _Component);\n\n  function EventsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      events: []\n    };\n\n    _this.deleteEvent = function (id) {\n      EventsManager.deleteEvent(id).then(function () {\n        EventsManager.getAllEvents().then(function (newEvents) {\n          _this.setState({\n            events: newEvents\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EventsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"Event LIST: ComponentDidMount\"); //getAll from EventsManager and hang on to that data; put it in state\n\n      EventsManager.getAllEvents().then(function (events) {\n        _this2.setState({\n          events: events\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"EventsList: Render\");\n      return React.createElement(React.Fragment, null, React.createElement(\"h1\", {\n        className: \"center card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Events\"), React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"card\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/events/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"Add Event\")), React.createElement(\"div\", {\n        className: \"container-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.state.events.map(function (event) {\n        return React.createElement(EventsCard, Object.assign({\n          key: event.id,\n          event: event,\n          deleteEvent: _this3.deleteEvent\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return EventsList;\n}(Component);\n\nexport default EventsList;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Events/EventsList.js"],"names":["React","Component","EventsCard","EventsManager","EventsList","state","events","deleteEvent","id","then","getAllEvents","newEvents","setState","console","log","props","history","push","map","event"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAO,cAAP;;IAEMC,U;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,MAAM,EAAE;AADJ,K;;UAeRC,W,GAAc,UAAAC,EAAE,EAAI;AAChBL,MAAAA,aAAa,CAACI,WAAd,CAA0BC,EAA1B,EACKC,IADL,CACU,YAAM;AACRN,QAAAA,aAAa,CAACO,YAAd,GACKD,IADL,CACU,UAACE,SAAD,EAAe;AACjB,gBAAKC,QAAL,CAAc;AACVN,YAAAA,MAAM,EAAEK;AADE,WAAd;AAGH,SALL;AAMH,OARL;AASH,K;;;;;;;wCArBmB;AAAA;;AAChBE,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EADgB,CAEhB;;AACAX,MAAAA,aAAa,CAACO,YAAd,GACKD,IADL,CACU,UAACH,MAAD,EAAY;AACd,QAAA,MAAI,CAACM,QAAL,CAAc;AACVN,UAAAA,MAAM,EAAEA;AADE,SAAd;AAGH,OALL;AAMH;;;6BAcQ;AAAA;;AACLO,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,aACI,0CACI;AAAI,QAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,MADd;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AAAwC,SAF7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,CAFJ,EASI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKZ,KAAL,CAAWC,MAAX,CAAkBY,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACxB,oBAAC,UAAD;AACI,UAAA,GAAG,EAAEA,KAAK,CAACX,EADf;AAEI,UAAA,KAAK,EAAEW,KAFX;AAGI,UAAA,WAAW,EAAE,MAAI,CAACZ;AAHtB,WAIQ,MAAI,CAACQ,KAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADwB;AAAA,OAA3B,CADL,CATJ,CADJ;AAqBH;;;;EArDoBd,S;;AAyDzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from 'react'\n//import the components we will need\nimport EventsCard from './EventsCard'\nimport EventsManager from '../../modules/EventsManager'\nimport \"./Events.css\"\n\nclass EventsList extends Component {\n    //define what this component needs to render\n    state = {\n        events: [],\n    }\n\n    componentDidMount() {\n        console.log(\"Event LIST: ComponentDidMount\");\n        //getAll from EventsManager and hang on to that data; put it in state\n        EventsManager.getAllEvents()\n            .then((events) => {\n                this.setState({\n                    events: events\n                })\n            })\n    }\n\n    deleteEvent = id => {\n        EventsManager.deleteEvent(id)\n            .then(() => {\n                EventsManager.getAllEvents()\n                    .then((newEvents) => {\n                        this.setState({\n                            events: newEvents\n                        })\n                    })\n            })\n    }\n\n    render() {\n        console.log(\"EventsList: Render\");\n\n        return (\n            <>\n                <h1 className=\"center card\">Events</h1>\n                <section className=\"section-content\">\n                    <button type=\"button\"\n                        className=\"card\"\n                        onClick={() => { this.props.history.push(\"/events/new\") }}>\n                        Add Event\n                    </button>\n                </section>\n                <div className=\"container-cards\">\n                    {this.state.events.map(event =>\n                        <EventsCard\n                            key={event.id}\n                            event={event}\n                            deleteEvent={this.deleteEvent}\n                            {...this.props} />\n                    )}\n                </div>\n            </>\n        )\n    }\n\n}\n\nexport default EventsList"]},"metadata":{},"sourceType":"module"}