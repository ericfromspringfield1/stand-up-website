{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesList.js\";\nimport React, { Component } from \"react\"; //import the components we will need\n\nimport AudiencesCard from \"./AudiencesCard\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\n\nvar AudiencesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AudiencesList, _Component);\n\n  function AudiencesList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AudiencesList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AudiencesList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      audiences: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    _this.deleteAudience = function (id) {\n      AudiencesManager.delete(id).then(function () {\n        AudiencesManager.getAll(_this.loggedInUser).then(function (newAudiences) {\n          _this.setState({\n            audiencess: newAudiences\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AudiencesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"AUDIENCE LIST: ComponentDidMount\"); //getAll from AudiencesManager and hang on to that data; put it in state\n\n      AudiencesManager.getAll(this.loggedInUser).then(function (audiences) {\n        _this2.setState({\n          audiences: audiences //we may want to rename as audiencesObj after audiences: \n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"AudiencesList: Render\");\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/audiences/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add Audience\")), React.createElement(\"div\", {\n        className: \"container-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.audiences.map(function (audience) {\n        return React.createElement(AudiencesCard, Object.assign({\n          key: audience.id,\n          audience: audience,\n          deleteAudience: _this3.deleteAudience\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return AudiencesList;\n}(Component);\n\nexport default AudiencesList;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesList.js"],"names":["React","Component","AudiencesCard","AudiencesManager","AudiencesList","state","audiences","loggedInUser","parseInt","sessionStorage","getItem","deleteAudience","id","delete","then","getAll","newAudiences","setState","audiencess","console","log","props","history","push","map","audience"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;IAEMC,a;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;UAGVC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;UAarBC,c,GAAiB,UAAAC,EAAE,EAAI;AACrBT,MAAAA,gBAAgB,CAACU,MAAjB,CAAwBD,EAAxB,EAA4BE,IAA5B,CAAiC,YAAM;AACrCX,QAAAA,gBAAgB,CAACY,MAAjB,CAAwB,MAAKR,YAA7B,EAA2CO,IAA3C,CAAgD,UAAAE,YAAY,EAAI;AAC9D,gBAAKC,QAAL,CAAc;AACVC,YAAAA,UAAU,EAAEF;AADF,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,K;;;;;;;wCApBmB;AAAA;;AAClBG,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EADkB,CAElB;;AACAjB,MAAAA,gBAAgB,CAACY,MAAjB,CAAwB,KAAKR,YAA7B,EACKO,IADL,CACU,UAAAR,SAAS,EAAI;AACf,QAAA,MAAI,CAACW,QAAL,CAAc;AACVX,UAAAA,SAAS,EAAEA,SADD,CAElB;;AAFkB,SAAd;AAIP,OAND;AAOD;;;6BAYO;AAAA;;AACNa,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,aACI,0CACI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AAA2C,SAF/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKlB,KAAL,CAAWC,SAAX,CAAqBkB,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eAC9B,oBAAC,aAAD;AACK,UAAA,GAAG,EAAEA,QAAQ,CAACb,EADnB;AAEK,UAAA,QAAQ,EAAEa,QAFf;AAGM,UAAA,cAAc,EAAE,MAAI,CAACd;AAH3B,WAIU,MAAI,CAACU,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAD8B;AAAA,OAAjC,CADL,CARJ,CADJ;AAqBC;;;;EApDuBpB,S;;AAsD5B,eAAeG,aAAf","sourcesContent":["import React, { Component } from \"react\";\n//import the components we will need\nimport AudiencesCard from \"./AudiencesCard\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\n\nclass AudiencesList extends Component {\n  //define what this component needs to render\n  state = {\n    audiences: []\n  };\nloggedInUser = parseInt(sessionStorage.getItem(\"credentials\"))\n  componentDidMount() {\n    console.log(\"AUDIENCE LIST: ComponentDidMount\");\n    //getAll from AudiencesManager and hang on to that data; put it in state\n    AudiencesManager.getAll(this.loggedInUser)\n        .then(audiences => {\n            this.setState({\n                audiences: audiences\n        //we may want to rename as audiencesObj after audiences: \n      });\n    });\n  }\n  \n  deleteAudience = id => {\n    AudiencesManager.delete(id).then(() => {\n      AudiencesManager.getAll(this.loggedInUser).then(newAudiences => {\n        this.setState({\n            audiencess: newAudiences\n        });\n      });\n    });\n  };\n\n  render(){\n    console.log(\"AudiencesList: Render\");\n\n    return (\n        <>\n            <section className=\"section-content\">\n            <button type=\"button\"\n                className=\"btn\"\n                onClick={() => {this.props.history.push(\"/audiences/new\") }}>\n                Add Audience\n            </button>\n            </section>\n            <div className=\"container-cards\">\n                {this.state.audiences.map(audience => \n                    <AudiencesCard \n                         key={audience.id} \n                         audience={audience} \n                          deleteAudience={this.deleteAudience} \n                          {...this.props}\n                    />\n                )}\n            </div>\n        </>\n        )\n    }\n}\nexport default AudiencesList;\n"]},"metadata":{},"sourceType":"module"}