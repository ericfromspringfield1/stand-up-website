{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Events/EventsEditForm.js\";\nimport React, { Component } from \"react\";\nimport EventsManager from \"../../modules/EventsManager\";\nimport \"./EventsForm.css\";\n\nvar EventsEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EventsEditForm, _Component);\n\n  function EventsEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EventsEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EventsEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      date: \"\",\n      location: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingEvent = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var editedEvent = {\n        id: _this.props.match.params.eventId,\n        name: _this.state.name,\n        date: _this.state.date,\n        location: _this.state.location\n      };\n      EventsManager.updateEvent(editedEvent).then(function () {\n        return _this.props.history.push(\"/events\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(EventsEditForm, [{\n    key: \"componentDidMount\",\n    //Below are the fields that populate the edit form\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      EventsManager.getEvent(this.props.match.params.eventId).then(function (event) {\n        _this2.setState({\n          name: event.name,\n          date: event.date,\n          location: event.location,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Event\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"location\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"location\",\n        value: this.state.location,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"location\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Location\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingEvent,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return EventsEditForm;\n}(Component);\n\nexport default EventsEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Events/EventsEditForm.js"],"names":["React","Component","EventsManager","EventsEditForm","state","name","date","location","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingEvent","preventDefault","editedEvent","props","match","params","eventId","updateEvent","then","history","push","getEvent","event"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport EventsManager from \"../../modules/EventsManager\"\nimport \"./EventsForm.css\"\n\nclass EventsEditForm extends Component {\n    //set the initial state\n    state = {\n      name: \"\",\n      date: \"\",\n      location:\"\",\n      loadingStatus: true,\n    };\n\n    handleFieldChange = evt => {\n      const stateToChange = {}\n      stateToChange[evt.target.id] = evt.target.value\n      this.setState(stateToChange)\n    }\n\n    updateExistingEvent= evt => {\n      evt.preventDefault()\n      this.setState({ loadingStatus: true });\n      const editedEvent = {\n        id: this.props.match.params.eventId,\n        name: this.state.name,\n        date: this.state.date,\n        location: this.state.location\n      };\n\n      EventsManager.updateEvent(editedEvent)\n      .then(() => this.props.history.push(\"/events\"))\n    }\n    //Below are the fields that populate the edit form\n    componentDidMount() {\n      EventsManager.getEvent(this.props.match.params.eventId)\n      .then(event => {\n          this.setState({\n            name: event.name,\n            date: event.date,\n            location: event.location,\n            loadingStatus: false,\n          });\n      });\n    }\n\n    render() {\n      return (\n        <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"name\"\n                value={this.state.name}\n              />\n              <label htmlFor=\"name\">Event</label>\n\n              <input\n                type=\"date\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                value={this.state.date}\n              />\n              <label htmlFor=\"date\">Date</label>\n              <input\n                type=\"location\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"location\"\n                value={this.state.location}\n              />\n              <label htmlFor=\"location\">Location</label>\n            </div>\n            <div className=\"alignRight\">\n              <button\n                type=\"button\" disabled={this.state.loadingStatus}\n                onClick={this.updateExistingEvent}\n                className=\"btn btn-primary\"\n              >Submit</button>\n            </div>\n          </fieldset>\n        </form>\n        </>\n      );\n    }\n}\n\nexport default EventsEditForm\n"]},"metadata":{},"sourceType":"module"}