{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _get$getAll$getAll$ge;\n\nvar remoteURL = \"http://localhost:8088\";\nexport default (_get$getAll$getAll$ge = {\n  get: function get(id) {\n    return fetch(\"\".concat(remoteURL, \"/venues/\").concat(id)).then(function (result) {\n      return result.json();\n    });\n  },\n  getAll: function getAll(userId) {\n    return fetch(\"\".concat(remoteURL, \"/venues?userId=\").concat(userId)).then(function (result) {\n      return result.json();\n    });\n  }\n}, _defineProperty(_get$getAll$getAll$ge, \"getAll\", function getAll() {\n  return fetch(\"\".concat(remoteURL, \"/venues/\")).then(function (result) {\n    return result.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"getWithVenues\", function getWithVenues(id) {\n  return fetch(\"\".concat(remoteURL, \"/venues/\").concat(id, \"?_embed=gigs\")).then(function (result) {\n    return result.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"post\", function post(newVenue) {\n  return fetch(\"\".concat(remoteURL, \"/venues\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newVenue)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"update\", function update(editedVenue) {\n  return fetch(\"\".concat(remoteURL, \"/venues/\").concat(editedVenue.id), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(editedVenue)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"delete\", function _delete(id) {\n  return fetch(\"http://localhost:8088/venues/\".concat(id), {\n    method: \"DELETE\"\n  }).then(function (result) {\n    return result.json();\n  });\n}), _get$getAll$getAll$ge);","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/modules/VenuesManager.js"],"names":["remoteURL","get","id","fetch","then","result","json","getAll","userId","newVenue","method","headers","body","JSON","stringify","data","editedVenue"],"mappings":";;;;AAAA,IAAMA,SAAS,GAAG,uBAAlB;AAEA;AACEC,EAAAA,GADF,eACMC,EADN,EACU;AACN,WAAOC,KAAK,WAAIH,SAAJ,qBAAwBE,EAAxB,EAAL,CAAmCE,IAAnC,CAAwC,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAA9C,CAAP;AACD,GAHH;AAIEC,EAAAA,MAJF,kBAISC,MAJT,EAIiB;AACb,WAAOL,KAAK,WAAIH,SAAJ,4BAA+BQ,MAA/B,EAAL,CAA8CJ,IAA9C,CAAmD,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAAzD,CAAP;AACD;AANH,sEAQW;AACP,SAAOH,KAAK,WAAIH,SAAJ,cAAL,CAA8BI,IAA9B,CAAmC,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAAzC,CAAP;AACH,CAVD,kFAWgBJ,EAXhB,EAWoB;AAChB,SAAOC,KAAK,WAAIH,SAAJ,qBAAwBE,EAAxB,kBAAL,CACEE,IADF,CACO,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GADb,CAAP;AAED,CAdH,gEAgBOG,QAhBP,EAgBiB;AACb,SAAON,KAAK,WAAIH,SAAJ,cAAwB;AAChCU,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFuB;AAKhCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,QAAf;AAL0B,GAAxB,CAAL,CAMJL,IANI,CAMC,UAAAW,IAAI;AAAA,WAAIA,IAAI,CAACT,IAAL,EAAJ;AAAA,GANL,CAAP;AAOH,CAxBD,oEA0BOU,WA1BP,EA0BoB;AAChB,SAAOb,KAAK,WAAIH,SAAJ,qBAAwBgB,WAAW,CAACd,EAApC,GAA0C;AACpDQ,IAAAA,MAAM,EAAE,KAD4C;AAEpDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAF2C;AAKpDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,WAAf;AAL8C,GAA1C,CAAL,CAMJZ,IANI,CAMC,UAAAW,IAAI;AAAA,WAAIA,IAAI,CAACT,IAAL,EAAJ;AAAA,GANL,CAAP;AAOD,CAlCH,qEAoCWJ,EApCX,EAoCe;AACT,SAAOC,KAAK,wCAAiCD,EAAjC,GAAuC;AAC/CQ,IAAAA,MAAM,EAAE;AADuC,GAAvC,CAAL,CAGNN,IAHM,CAGD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAHL,CAAP;AAID,CAzCL","sourcesContent":["const remoteURL = \"http://localhost:8088\"\n\nexport default {\n  get(id) {\n    return fetch(`${remoteURL}/venues/${id}`).then(result => result.json())\n  },\n  getAll(userId) {\n    return fetch(`${remoteURL}/venues?userId=${userId}`).then(result => result.json())\n  },\n\n  getAll() {\n    return fetch(`${remoteURL}/venues/`).then(result => result.json())\n},\n  getWithVenues(id) {\n    return fetch(`${remoteURL}/venues/${id}?_embed=gigs`)\n            .then(result => result.json())\n  },\n\n  post(newVenue) {\n    return fetch(`${remoteURL}/venues`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newVenue)\n    }).then(data => data.json())\n},\n\nupdate(editedVenue) {\n    return fetch(`${remoteURL}/venues/${editedVenue.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedVenue)\n    }).then(data => data.json());\n  },\n  \n    delete(id) {\n      return fetch(`http://localhost:8088/venues/${id}`, {\n          method: \"DELETE\"\n      })\n      .then(result => result.json())\n    }\n\n}"]},"metadata":{},"sourceType":"module"}