{"ast":null,"code":"// import React, { Component } from \"react\";\n// import GigsManager from \"../../modules/GigsManager\";\n// import \"./GigsForm.css\";\n// class GigsForm extends Component {\n//   state = {\n//     gig: \"\",\n//     date: \"\",\n//     venue: \"\",\n//     rating: 0,\n//     loadingStatus: false\n//   };\n//   handleFieldChange = evt => {\n//     const stateToChange = {};\n//     stateToChange[evt.target.id] = evt.target.value;\n//     this.setState(stateToChange);\n//   };\n//   /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n//    */\n//   constructNewGig = evt => {\n//     evt.preventDefault();\n//     if (\n//       this.state.gig === \"\" ||\n//       this.state.date === \"\" ||\n//       this.state.spot === \"\" ||\n//       this.state.rating === \"\" \n//     ) {\n//       window.alert(\"Please input a gig and date\");\n//     } else {\n//       this.setState({ loadingStatus: true });\n//       const gig = {\n//         gig: this.state.gig,\n//         date: this.state.date,\n//         spot: this.state.spot,\n//         rating: this.state.rating,\n//         userId: parseInt(sessionStorage.getItem(\"credentials\")),\n//         // venueId: parseInt(sessionStorage.getItem(\"credentials\"))\n//       };\n//       // Create the gig and redirect user to gig list\n//       GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));    \n//     }\n//   };\n//   render() {\n//     return (\n//       <>\n//         <form>\n//           <fieldset>\n//             <div className=\"formgrid\">\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"gig\"\n//                 placeholder=\"Gig\"\n//               />\n//               <label htmlFor=\"gig\">Gig</label>\n//               <input\n//                 type=\"date\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"date\"\n//                 placeholder=\"Date Of Gig\"\n//               />\n//               <label htmlFor=\"date\">Date</label>\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"spot\"\n//                 placeholder=\"In What Spot Did You Perform\"\n//               />\n//               <label htmlFor=\"spot\">Spot</label>\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"rating\"\n//                 placeholder=\"Rate Your Set\"\n//               />\n//               <label htmlFor=\"rating\">Rating</label>\n//             </div>\n//             <div className=\"alignRight\">\n//               <button\n//                 type=\"button\"\n//                 disabled={this.state.loadingStatus}\n//                 onClick={this.constructNewGig}\n//               >\n//                 Submit\n//               </button>\n//             </div>\n//           </fieldset>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n// export default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\n// import GigsManager from \"../../modules/GigsManager\";\n// import \"./GigsForm.css\";\n\n// class GigsForm extends Component {\n//   state = {\n//     gig: \"\",\n//     date: \"\",\n//     venue: \"\",\n//     rating: 0,\n//     loadingStatus: false\n//   };\n\n//   handleFieldChange = evt => {\n//     const stateToChange = {};\n//     stateToChange[evt.target.id] = evt.target.value;\n//     this.setState(stateToChange);\n//   };\n\n//   /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n//    */\n//   constructNewGig = evt => {\n//     evt.preventDefault();\n//     if (\n//       this.state.gig === \"\" ||\n//       this.state.date === \"\" ||\n//       this.state.spot === \"\" ||\n//       this.state.rating === \"\" \n//     ) {\n//       window.alert(\"Please input a gig and date\");\n//     } else {\n//       this.setState({ loadingStatus: true });\n//       const gig = {\n//         gig: this.state.gig,\n//         date: this.state.date,\n//         spot: this.state.spot,\n//         rating: this.state.rating,\n//         userId: parseInt(sessionStorage.getItem(\"credentials\")),\n//         // venueId: parseInt(sessionStorage.getItem(\"credentials\"))\n//       };\n\n//       // Create the gig and redirect user to gig list\n//       GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));    \n//     }\n//   };\n\n//   render() {\n//     return (\n//       <>\n//         <form>\n//           <fieldset>\n//             <div className=\"formgrid\">\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"gig\"\n//                 placeholder=\"Gig\"\n//               />\n//               <label htmlFor=\"gig\">Gig</label>\n\n//               <input\n//                 type=\"date\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"date\"\n//                 placeholder=\"Date Of Gig\"\n//               />\n//               <label htmlFor=\"date\">Date</label>\n\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"spot\"\n//                 placeholder=\"In What Spot Did You Perform\"\n//               />\n//               <label htmlFor=\"spot\">Spot</label>\n\n//               <input\n//                 type=\"text\"\n//                 required\n//                 onChange={this.handleFieldChange}\n//                 id=\"rating\"\n//                 placeholder=\"Rate Your Set\"\n//               />\n//               <label htmlFor=\"rating\">Rating</label>\n//             </div>\n            \n//             <div className=\"alignRight\">\n//               <button\n//                 type=\"button\"\n//                 disabled={this.state.loadingStatus}\n//                 onClick={this.constructNewGig}\n//               >\n//                 Submit\n//               </button>\n//             </div>\n//           </fieldset>\n//         </form>\n//       </>\n//     );\n//   }\n// }\n\n// export default GigsForm;\n"]},"metadata":{},"sourceType":"module"}