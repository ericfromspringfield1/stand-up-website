{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\n\nvar GigsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsForm, _Component);\n\n  function GigsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      venues: [],\n      audiences: [],\n      spots: [],\n      loadingStatus: false\n    };\n\n    _this.constructNewGig = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var gig = {\n        name: _this.state.name,\n        date: _this.state.date,\n        venue: _this.state.venues.name,\n        audience: _this.state.audiences.name,\n        spot: _this.state.spots.name,\n        userId: _this.props.match.params.userId\n      };\n      GigsManager.post(gig).then(function () {\n        return _this.props.history.push(\"/gigs\");\n      });\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      VenuesManager.get(this.props.match.params.id).then(function (venue) {\n        _this2.setState({\n          venue: _this2.props.match.params.venueId\n        });\n\n        AudiencesManager.get(_this2.props.match.params.id).then(function (audience) {\n          _this2.setState({\n            audience: _this2.props.match.params.audience\n          });\n        });\n        SpotsManager.get(_this2.props.match.params.id).then(function (spots) {\n          _this2.setState({\n            spot: _this2.props.match.params.audienceId\n          });\n        });\n        var loggedInUserGig = parseInt(sessionStorage.getItem(\"credentials\"));\n        GigsManager.getAll(loggedInUserGig).then(function (gigs) {\n          return _this2.setState({\n            gigs: gigs\n          });\n        });\n        var loggedInUserVenue = parseInt(sessionStorage.getItem(\"credentials\"));\n        VenuesManager.getAll(loggedInUserVenue).then(function (venues) {\n          return _this2.setState({\n            venues: venues\n          });\n        });\n        var loggedInUserAudience = parseInt(sessionStorage.getItem(\"credentials\"));\n        AudiencesManager.getAll(loggedInUserAudience).then(function (audiences) {\n          return _this2.setState({\n            audiences: audiences\n          });\n        });\n        var loggedInUserSpot = parseInt(sessionStorage.getItem(\"credentials\"));\n        SpotsManager.getAll(loggedInUserSpot).then(function (spots) {\n          return _this2.setState({\n            spots: spots\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n\n    /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n    */\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        placeholder: \"Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: \"Date Of Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"venueId\",\n        value: this.state.venueId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, this.state.venues.map(function (venue) {\n        return React.createElement(\"option\", {\n          key: venue.id,\n          value: venue.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, venue.name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Venue\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"audienceId\",\n        value: this.state.audienceId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.audiences.map(function (audience) {\n        return React.createElement(\"option\", {\n          key: audience.id,\n          value: audience.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, audience.name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"audience\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"Audience Type\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"spotId\",\n        value: this.state.spotId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, this.state.spots.map(function (spot) {\n        return React.createElement(\"option\", {\n          key: spot.id,\n          value: spot.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143\n          },\n          __self: this\n        }, spot.name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Spot Order\"), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewGig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsForm;\n}(Component);\n\nexport default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":["React","Component","GigsManager","VenuesManager","AudiencesManager","SpotsManager","GigsForm","state","gig","date","venues","audiences","spots","loadingStatus","constructNewGig","evt","preventDefault","setState","name","venue","audience","spot","userId","props","match","params","post","then","history","push","handleFieldChange","stateToChange","target","id","value","get","venueId","audienceId","loggedInUserGig","parseInt","sessionStorage","getItem","getAll","gigs","loggedInUserVenue","loggedInUserAudience","loggedInUserSpot","map","spotId"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\n\n\nclass GigsForm extends Component {\n  state = {\n    gig: \"\",\n    date: \"\",\n    venues: [],\n    audiences: [],\n    spots: [],\n    loadingStatus: false \n  };\n\n  constructNewGig = evt => {\n   evt.preventDefault();\n   \n      this.setState({ loadingStatus: true });\n      const gig = {   \n        name: this.state.name,\n        date: this.state.date,\n        venue: this.state.venues.name,\n        audience: this.state.audiences.name,\n        spot: this.state.spots.name,\n        userId: this.props.match.params.userId,\n      }\n      \n      GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));\n    }\n  \n  componentDidMount() {\n    VenuesManager.get(this.props.match.params.id).then(venue => {\n      this.setState({\n        venue: this.props.match.params.venueId, \n      });\n\n      AudiencesManager.get(this.props.match.params.id).then(audience => {\n        this.setState({\n          audience: this.props.match.params.audience,\n        });\n      })\n      SpotsManager.get(this.props.match.params.id).then(spots => {\n        this.setState({\n          spot: this.props.match.params.audienceId,\n        });\n      })\n      \n      const loggedInUserGig = parseInt(sessionStorage.getItem(\"credentials\"));\n      GigsManager.getAll(loggedInUserGig).then(gigs =>\n        this.setState({ gigs: gigs })\n      );\n        const loggedInUserVenue = parseInt(sessionStorage.getItem(\"credentials\"));\n        VenuesManager.getAll(loggedInUserVenue).then(venues =>\n        this.setState({ venues: venues })\n        );\n        const loggedInUserAudience = parseInt(sessionStorage.getItem(\"credentials\"));\n        AudiencesManager.getAll(loggedInUserAudience).then(audiences =>\n          this.setState({ audiences: audiences })\n          );\n          const loggedInUserSpot = parseInt(sessionStorage.getItem(\"credentials\"));\n          SpotsManager.getAll(loggedInUserSpot).then(spots =>\n            this.setState({ spots: spots })\n            );\n      \n    })\n  }\n        \n        \n                \n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n  \n  /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n  */\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"name\"\n                placeholder=\"Gig\"\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                placeholder=\"Date Of Gig\"\n              />\n              <label htmlFor=\"date\">Date</label>\n            </div>\n\n            <select\n              className=\"form-control\"\n              id=\"venueId\"\n              value={this.state.venueId}\n              onChange={this.handleFieldChange}\n            >\n              {this.state.venues.map(venue => (\n                <option key={venue.id} value={venue.id}>\n                  {venue.name}\n                </option>\n              ))}\n            </select>\n            <label htmlFor=\"venue\">Venue</label>\n\n            <select\n              className=\"form-control\"\n              id=\"audienceId\"\n              value={this.state.audienceId}\n              onChange={this.handleFieldChange}\n            >\n              {this.state.audiences.map(audience => (\n                <option key={audience.id} value={audience.id}>\n                  {audience.name}\n                </option>\n              ))}\n            </select>\n            <label htmlFor=\"audience\">Audience Type</label>\n\n            <select\n              className=\"form-control\"\n              id=\"spotId\"\n              value={this.state.spotId}\n              onChange={this.handleFieldChange}\n            >\n              {this.state.spots.map(spot => (\n                <option key={spot.id} value={spot.id}>\n                  {spot.name}\n                </option>\n              ))}\n            </select>\n            <label htmlFor=\"spot\">Spot Order</label>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewGig}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default GigsForm;\n"]},"metadata":{},"sourceType":"module"}