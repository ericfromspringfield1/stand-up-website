{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Tasks/TasksDetail.js\";\nimport React, { Component } from 'react';\nimport TasksManager from '../../modules/TasksManager';\nimport './TasksDetail.css';\n\nvar TasksDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TasksDetail, _Component);\n\n  function TasksDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TasksDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TasksDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      task: \"\",\n      date: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleDelete = function () {\n      //invoke the delete function in TasksManager and re-direct to the task list.\n      _this.setState({\n        loadingStatus: true\n      });\n\n      TasksManager.delete(_this.props.taskId).then(function () {\n        return _this.props.history.push(\"/tasks\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TasksDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"TaskDetail: ComponentDidMount\"); //get(id) from TasksManager and hang on to the data; put it into state\n\n      TasksManager.get(this.props.taskId).then(function (task) {\n        _this2.setState({\n          task: task.task,\n          date: task.date,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _React$createElement,\n          _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.props.task.task), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"input\", (_React$createElement = {\n        type: \"radio\",\n        name: \"react-tips\",\n        value: \"option1\",\n        checked: true,\n        className: \"form-check-input\"\n      }, _defineProperty(_React$createElement, \"checked\", this.state.selectedOption === \"option1\"), _defineProperty(_React$createElement, \"onChange\", this.handleOptionChange), _defineProperty(_React$createElement, \"onSubmit\", this.handleFormSubmit), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement)), \"Task Complete\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/tasks/\".concat(_this3.props.task.id, \"/edit\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Delete Task\"));\n    }\n  }]);\n\n  return TasksDetail;\n}(Component);\n\nexport default TasksDetail;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Tasks/TasksDetail.js"],"names":["React","Component","TasksManager","TasksDetail","state","task","date","loadingStatus","handleDelete","setState","delete","props","taskId","then","history","push","console","log","get","selectedOption","handleOptionChange","handleFormSubmit","id"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAO,mBAAP;;IAEMC,W;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,IAAI,EAAE,EAFF;AAGJC,MAAAA,aAAa,EAAE;AAHX,K;;UAmBRC,Y,GAAe,YAAM;AACnB;AACA,YAAKC,QAAL,CAAc;AAACF,QAAAA,aAAa,EAAE;AAAhB,OAAd;;AACAL,MAAAA,YAAY,CAACQ,MAAb,CAAoB,MAAKC,KAAL,CAAWC,MAA/B,EACCC,IADD,CACM;AAAA,eAAM,MAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB,CAAN;AAAA,OADN;AAEH,K;;;;;;;wCAlBoB;AAAA;;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EADiB,CAEjB;;AACAf,MAAAA,YAAY,CAACgB,GAAb,CAAiB,KAAKP,KAAL,CAAWC,MAA5B,EACCC,IADD,CACM,UAACR,IAAD,EAAU;AACd,QAAA,MAAI,CAACI,QAAL,CAAc;AACZJ,UAAAA,IAAI,EAAEA,IAAI,CAACA,IADC;AAEZC,UAAAA,IAAI,EAAED,IAAI,CAACC,IAFC;AAGZC,UAAAA,aAAa,EAAE;AAHH,SAAd;AAKD,OAPD;AAQD;;;6BASQ;AAAA;AAAA;;AACP,aACI,0CACF;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKI,KAAL,CAAWN,IAAX,CAAgBA,IADrB,CADE,EAIF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACE,QAAA,IAAI,EAAC,OADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,OAAO,EAAE,IAJX;AAKE,QAAA,SAAS,EAAC;AALZ,0DAMW,KAAKD,KAAL,CAAWe,cAAX,KAA8B,SANzC,qDAOY,KAAKC,kBAPjB,qDAQY,KAAKC,gBARjB;AAAA;AAAA;AAAA,uFADJ,kBAJE,EAiBA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACV,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,kBAAkC,MAAI,CAACJ,KAAL,CAAWN,IAAX,CAAgBiB,EAAlD;AAA8D,SAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAjBA,EAkBA;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWG,aAA3C;AAA0D,QAAA,OAAO,EAAE,KAAKC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAlBA,CADJ;AAuBD;;;;EApDuBP,S;;AAuD1B,eAAeE,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport TasksManager from '../../modules/TasksManager';\nimport './TasksDetail.css'\n\nclass TasksDetail extends Component {\n\n  state = {\n      task: \"\",\n      date: \"\",\n      loadingStatus: true,\n  }\n\n  componentDidMount(){\n    console.log(\"TaskDetail: ComponentDidMount\");\n    //get(id) from TasksManager and hang on to the data; put it into state\n    TasksManager.get(this.props.taskId)\n    .then((task) => {\n      this.setState({\n        task: task.task,\n        date: task.date,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  handleDelete = () => {\n    //invoke the delete function in TasksManager and re-direct to the task list.\n    this.setState({loadingStatus: true})\n    TasksManager.delete(this.props.taskId)\n    .then(() => this.props.history.push(\"/tasks\"))\n}\n\n  render() {\n    return (\n        <>\n      <div className=\"card\">\n          {this.props.task.task}\n      </div>\n      <label>\n          <input\n            type=\"radio\"\n            name=\"react-tips\"\n            value=\"option1\"\n            checked={true}\n            className=\"form-check-input\"\n            checked={this.state.selectedOption === \"option1\"}\n            onChange={this.handleOptionChange}\n            onSubmit={this.handleFormSubmit}>\n            </input>\n          Task Complete\n        </label>\n        <button type=\"button\" onClick={() => { this.props.history.push(`/tasks/${this.props.task.id}/edit`) }}>Edit</button>\n        <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Task</button>\n        </>\n        \n    );\n  }\n}\n\nexport default TasksDetail;"]},"metadata":{},"sourceType":"module"}