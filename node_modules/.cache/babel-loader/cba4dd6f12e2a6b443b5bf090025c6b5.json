{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nvar GigsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsForm, _Component);\n\n  function GigsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      loadingStatus: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.constructNewGig = function (evt) {\n      evt.preventDefault();\n\n      if (_this.state.gig === \"\" || _this.state.date === \"\" || _this.state.rating === \"\") {\n        window.alert(\"Please input a gig and date\");\n      } else {\n        _this.setState({\n          loadingStatus: true\n        });\n\n        var gig = {\n          gig: _this.state.gig,\n          date: _this.state.date,\n          rating: _this.state.rating,\n          userId: parseInt(sessionStorage.getItem(\"credentials\")) // venueId: parseInt(sessionStorage.getItem(\"credentials\"))\n\n        }; // Create the gig and redirect user to gig list\n\n        GigsManager.post(gig).then(function () {\n          return _this.props.history.push(\"/gigs\");\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"http://localhost:8088/gigs\");\n      fetch(\"http://localhost:8088/venues\");\n      fetch(\"http://localhost:8088/audiences\");\n      fetch(\"http://localhost:8088/spots\").then(function (e) {\n        return e.json();\n      });\n      GigsManager.getAll(this.loggedInUser);\n      VenuesManager.getAll(this.loggenInUser);\n      AudiencesManager.getAll(this.loggenInUser);\n      SpotsManager.getAll(this.loggenInUser).then(function (gigs) {\n        return _this2.setState({\n          gigs: gigs\n        });\n      }).then(function (venues) {\n        return _this2.setState({\n          venues: venues\n        });\n      }).then(function (audiences) {\n        return _this2.setState({\n          audiences: audiences\n        });\n      }).then(function (spots) {\n        return _this2.setState({\n          spots: spots\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        placeholder: \"Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: \"Date Of Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"venueId\",\n        value: this.state.venueId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, this.state.venues.map(function (venue) {\n        return React.createElement(\"option\", {\n          key: venue.id,\n          value: venue.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }, venue.name);\n      })), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"audienceId\",\n        value: this.state.audienceId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, this.state.audiences.map(function (audience) {\n        return React.createElement(\"option\", {\n          key: audience.id,\n          value: audience.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116\n          },\n          __self: this\n        }, audience.name);\n      })), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"spot\",\n        placeholder: \"In What Spot Did You Perform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Spot\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"rating\",\n        placeholder: \"Rate Your Set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"city\",\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"state\",\n        placeholder: \"State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"capacity\",\n        placeholder: \"Capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Capacity\"), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewGig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsForm;\n}(Component);\n\nexport default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":["React","Component","GigsManager","VenuesManager","AudiencesManager","SpotsManager","GigsForm","state","gig","date","rating","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","constructNewGig","preventDefault","window","alert","userId","parseInt","sessionStorage","getItem","post","then","props","history","push","fetch","e","json","getAll","loggedInUser","loggenInUser","gigs","venues","audiences","spots","venueId","map","venue","name","audienceId","audience"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nclass GigsForm extends Component {\n  state = {\n    gig: \"\",\n    date: \"\",\n    rating: 0,\n    loadingStatus: false\n  };\n\n  componentDidMount() {\n    fetch(\"http://localhost:8088/gigs\")\n    fetch(\"http://localhost:8088/venues\")\n    fetch(\"http://localhost:8088/audiences\")\n    fetch(\"http://localhost:8088/spots\")\n    .then(e => e.json());\n    GigsManager.getAll(this.loggedInUser)\n    VenuesManager.getAll(this.loggenInUser)\n    AudiencesManager.getAll(this.loggenInUser)\n    SpotsManager.getAll(this.loggenInUser)\n    .then(gigs =>\n      this.setState({ gigs: gigs })\n    )\n    .then(venues =>\n      this.setState({ venues: venues })\n    )\n    .then(audiences =>\n      this.setState({ audiences: audiences })\n      )\n    .then(spots =>\n      this.setState({ spots: spots })\n      );\n\n    }\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n   */\n  constructNewGig = evt => {\n    evt.preventDefault();\n    if (\n      this.state.gig === \"\" ||\n      this.state.date === \"\" ||\n      this.state.rating === \"\"\n    ) {\n      window.alert(\"Please input a gig and date\");\n    } else {\n      this.setState({ loadingStatus: true });\n      const gig = {\n        gig: this.state.gig,\n        date: this.state.date,\n        rating: this.state.rating,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n        // venueId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n\n      // Create the gig and redirect user to gig list\n      GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                placeholder=\"Gig\"\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                placeholder=\"Date Of Gig\"\n              />\n              <label htmlFor=\"date\">Date</label>\n\n              <select\n                className=\"form-control\"\n                id=\"venueId\"\n                value={this.state.venueId}\n                onChange={this.handleFieldChange}\n              >\n                {this.state.venues.map(venue => (\n                  <option key={venue.id} value={venue.id}>\n                    {venue.name}\n                  </option>\n                ))}\n              </select>\n\n              <select\n                className=\"form-control\"\n                id=\"audienceId\"\n                value={this.state.audienceId}\n                onChange={this.handleFieldChange}\n              >\n                {this.state.audiences.map(audience => (\n                  <option key={audience.id} value={audience.id}>\n                    {audience.name}\n                  </option>\n                ))}\n              </select>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"spot\"\n                placeholder=\"In What Spot Did You Perform\"\n              />\n              <label htmlFor=\"spot\">Spot</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"rating\"\n                placeholder=\"Rate Your Set\"\n              />\n              <label htmlFor=\"rating\">Rating</label>\n            </div>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"city\"\n              placeholder=\"City\"\n            />\n            <label htmlFor=\"city\">City</label>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"state\"\n              placeholder=\"State\"\n            />\n            <label htmlFor=\"state\">State</label>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"capacity\"\n              placeholder=\"Capacity\"\n            />\n            <label htmlFor=\"capacity\">Capacity</label>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewGig}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default GigsForm;\n"]},"metadata":{},"sourceType":"module"}