{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Tasks/TasksEditForm.js\";\nimport React, { Component } from \"react\";\nimport TasksManager from \"../../modules/TasksManager\";\nimport \"./TasksForm.css\";\n\nvar TasksEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(TasksEditForm, _Component);\n\n  function TasksEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TasksEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TasksEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      task: \"\",\n      date: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingTask = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var editedTask = {\n        task: _this.state.task,\n        date: _this.state.date,\n        id: _this.props.match.params.taskId\n      };\n      TasksManager.update(editedTask).then(function () {\n        return _this.props.history.push(\"/tasks\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TasksEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      TasksManager.get(this.props.match.params.taskId).then(function (task) {\n        _this2.setState({\n          task: task.task,\n          date: task.date,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"task\",\n        value: this.state.task,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"task\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Task\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingTask,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return TasksEditForm;\n}(Component);\n\nexport default TasksEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Tasks/TasksEditForm.js"],"names":["React","Component","TasksManager","TasksEditForm","state","task","date","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingTask","preventDefault","editedTask","props","match","params","taskId","update","then","history","push","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport TasksManager from \"../../modules/TasksManager\"\nimport \"./TasksForm.css\"\n\nclass TasksEditForm extends Component {\n    //set the initial state\n    state = {\n      task: \"\",\n      date: \"\",\n      loadingStatus: true,\n    };\n\n    handleFieldChange = evt => {\n      const stateToChange = {}\n      stateToChange[evt.target.id] = evt.target.value\n      this.setState(stateToChange)\n    }\n\n    updateExistingTask = evt => {\n      evt.preventDefault()\n      this.setState({ loadingStatus: true });\n      const editedTask = {\n        task: this.state.task,\n        date: this.state.date,\n        id: this.props.match.params.taskId\n      };\n\n      TasksManager.update(editedTask)\n      .then(() => this.props.history.push(\"/tasks\"))\n    }\n\n    componentDidMount() {\n      TasksManager.get(this.props.match.params.taskId)\n      .then(task => {\n          this.setState({\n            task: task.task,\n            date: task.date,\n            loadingStatus: false,\n          });\n      });\n    }\n\n    render() {\n      return (\n        <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"task\"\n                value={this.state.task}\n              />\n              <label htmlFor=\"task\">Task</label>\n\n              <input\n                type=\"date\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                value={this.state.date}\n              />\n              <label htmlFor=\"date\">Date</label>\n            </div>\n            <div className=\"alignRight\">\n              <button\n                type=\"button\" disabled={this.state.loadingStatus}\n                onClick={this.updateExistingTask}\n                className=\"btn btn-primary\"\n              >Submit</button>\n            </div>\n          </fieldset>\n        </form>\n        </>\n      );\n    }\n}\n\nexport default TasksEditForm"]},"metadata":{},"sourceType":"module"}