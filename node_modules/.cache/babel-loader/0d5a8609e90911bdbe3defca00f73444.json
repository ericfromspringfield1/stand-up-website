{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsList.js\";\nimport React, { Component } from \"react\"; //import the components we will need\n\nimport GigsCard from \"./GigsCard\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesDetail from \"../Venues/VenuesDetail\";\n\nvar GigsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsList, _Component);\n\n  function GigsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gigs: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    _this.deleteGig = function (id) {\n      GigsManager.delete(id).then(function () {\n        GigsManager.getAll(_this.loggedInUser).then(function (newGigs) {\n          _this.setState({\n            gigs: newGigs\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"GIG LIST: ComponentDidMount\"); //getAll from GigsManager and hang on to that data; put it in state\n\n      GigsManager.getAll(this.loggedInUser).then(function (gigs) {\n        _this2.setState({\n          gigs: gigs //we may want to rename as gigsObj after gigs: \n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"GigsList: Render\");\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/gigs/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \"Add Gig\")), React.createElement(\"div\", {\n        className: \"container-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, this.state.gigs.map(function (gig) {\n        var _Object$assign;\n\n        return React.createElement(GigsCard, Object.assign((_Object$assign = {\n          key: gig.id\n        }, _defineProperty(_Object$assign, \"key\", venue.id), _defineProperty(_Object$assign, \"gig\", gig), _defineProperty(_Object$assign, \"deleteGig\", _this3.deleteGig), _Object$assign), _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return GigsList;\n}(Component);\n\nexport default GigsList;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsList.js"],"names":["React","Component","GigsCard","GigsManager","VenuesDetail","GigsList","state","gigs","loggedInUser","parseInt","sessionStorage","getItem","deleteGig","id","delete","then","getAll","newGigs","setState","console","log","props","history","push","map","gig","venue"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;;IAEMC,Q;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,IAAI,EAAE;AADA,K;UAGVC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;UAarBC,S,GAAY,UAAAC,EAAE,EAAI;AAChBV,MAAAA,WAAW,CAACW,MAAZ,CAAmBD,EAAnB,EAAuBE,IAAvB,CAA4B,YAAM;AAChCZ,QAAAA,WAAW,CAACa,MAAZ,CAAmB,MAAKR,YAAxB,EAAsCO,IAAtC,CAA2C,UAAAE,OAAO,EAAI;AACpD,gBAAKC,QAAL,CAAc;AACVX,YAAAA,IAAI,EAAEU;AADI,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,K;;;;;;;wCApBmB;AAAA;;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EADkB,CAElB;;AACAjB,MAAAA,WAAW,CAACa,MAAZ,CAAmB,KAAKR,YAAxB,EACKO,IADL,CACU,UAAAR,IAAI,EAAI;AACV,QAAA,MAAI,CAACW,QAAL,CAAc;AACVX,UAAAA,IAAI,EAAEA,IADI,CAElB;;AAFkB,SAAd;AAIP,OAND;AAOD;;;6BAYO;AAAA;;AACNY,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,aACI,0CACI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,WAAxB;AAAsC,SAF1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADA,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKjB,KAAL,CAAWC,IAAX,CAAgBiB,GAAhB,CAAoB,UAAAC,GAAG;AAAA;;AAAA,eACpB,oBAAC,QAAD;AACK,UAAA,GAAG,EAAEA,GAAG,CAACZ;AADd,kDAEUa,KAAK,CAACb,EAFhB,0CAGUY,GAHV,gDAIiB,MAAI,CAACb,SAJtB,oBAKU,MAAI,CAACS,KALf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADoB;AAAA,OAAvB,CADL,CARJ,CADJ;AAsBC;;;;EArDkBpB,S;;AA8DvB,eAAeI,QAAf","sourcesContent":["import React, { Component } from \"react\";\n//import the components we will need\nimport GigsCard from \"./GigsCard\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesDetail from \"../Venues/VenuesDetail\";\n\nclass GigsList extends Component {\n  //define what this component needs to render\n  state = {\n    gigs: []\n  };\nloggedInUser = parseInt(sessionStorage.getItem(\"credentials\"))\n  componentDidMount() {\n    console.log(\"GIG LIST: ComponentDidMount\");\n    //getAll from GigsManager and hang on to that data; put it in state\n    GigsManager.getAll(this.loggedInUser)\n        .then(gigs => {\n            this.setState({\n                gigs: gigs\n        //we may want to rename as gigsObj after gigs: \n      });\n    });\n  }\n  \n  deleteGig = id => {\n    GigsManager.delete(id).then(() => {\n      GigsManager.getAll(this.loggedInUser).then(newGigs => {\n        this.setState({\n            gigs: newGigs\n        });\n      });\n    });\n  };\n\n  render(){\n    console.log(\"GigsList: Render\");\n\n    return (\n        <>\n            <section className=\"section-content\">\n            <button type=\"button\"\n                className=\"btn\"\n                onClick={() => {this.props.history.push(\"/gigs/new\") }}>\n                Add Gig\n            </button>\n            </section>\n            <div className=\"container-cards\">\n                {this.state.gigs.map(gig => \n                    <GigsCard \n                         key={gig.id} \n                         key={venue.id}\n                         gig={gig} \n                          deleteGig={this.deleteGig} \n                          {...this.props}\n                    />\n                )}\n            </div>\n        </>\n        )\n    }\n  \n\n\n\n\n\n  \n}\nexport default GigsList; \n"]},"metadata":{},"sourceType":"module"}