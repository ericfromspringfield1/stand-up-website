{"ast":null,"code":"// import React, { Component } from \"react\";\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n// class AudiencesForm extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       showMenu: false\n//     };\n//     this.showMenu = this.showMenu.bind(this);\n//   }\n//   showMenu(event) {\n//     event.preventDefault();\n//     this.setState({\n//       showMenu: true\n//     });\n//     AudiencesManager.post(event)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <button>Show menu</button>\n//           <div className=\"menu\">\n//             <button> Hot </button>\n//             <button> Cold</button>\n//             <button> Corporate </button>\n//             <button> Sparse </button>\n//             <button> Engaged </button>\n//             <button> A Buncha Drunks </button>\n//             <button> A Buncha Hecklers </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n// import React, { Component } from 'react';\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n// class AudiencesForm extends Component {\n//     state = {\n//         audience: \"\",\n//         loadingStatus: false,\n//     };\n//     handleFieldChange = evt => {\n//         const stateToChange = {};\n//         stateToChange[evt.target.id] = evt.target.value;\n//         this.setState(stateToChange);\n//     };\n//     /*  Local method for validation, set loadingStatus, create audience object, invoke the AudiencesManager post method, and redirect to the full audience list\n//     */\n//     constructNewAudience = evt => {\n//         evt.preventDefault();\n//         if (this.state.audience === \"\") {\n//             window.alert(\"Please input an audience\");\n//         } else {\n//             this.setState({ loadingStatus: true });\n//             const audience = {\n//                 audience: this.state.audience,\n//                 userId: parseInt(sessionStorage.getItem(\"credentials\"))\n//             };\n//             // Create the audience and redirect user to audience list\n//             AudiencesManager.post(audience)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//         }\n//     };\n//     render(){\n//         return(\n//             <>\n//             <form>\n//                 <fieldset>\n//                     <div className=\"formgrid\">\n//                         <input\n//                         type=\"text\"\n//                         required\n//                         onChange={this.handleFieldChange}\n//                         id=\"audience\"\n//                         placeholder=\"This Crowd Was A Buncha...\"\n//                         />\n//                         <label htmlFor=\"audience\">Audience</label>\n//                     </div>\n//                     <div className=\"alignRight\">\n//                         <button\n//                         type=\"button\"\n//                         disabled={this.state.loadingStatus}\n//                         onClick={this.constructNewAudience}\n//                         >Submit</button>\n//                     </div>\n//                 </fieldset>\n//             </form>\n//         </>\n//         )\n//     }\n// }\n// export default AudiencesForm","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesForm.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from \"react\";\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n\n// class AudiencesForm extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       showMenu: false\n//     };\n//     this.showMenu = this.showMenu.bind(this);\n//   }\n//   showMenu(event) {\n//     event.preventDefault();\n\n//     this.setState({\n//       showMenu: true\n\n//     });\n\n//     AudiencesManager.post(event)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <button>Show menu</button>\n//           <div className=\"menu\">\n//             <button> Hot </button>\n//             <button> Cold</button>\n//             <button> Corporate </button>\n//             <button> Sparse </button>\n//             <button> Engaged </button>\n//             <button> A Buncha Drunks </button>\n//             <button> A Buncha Hecklers </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\n\n// import React, { Component } from 'react';\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n\n// class AudiencesForm extends Component {\n//     state = {\n//         audience: \"\",\n//         loadingStatus: false,\n//     };\n\n//     handleFieldChange = evt => {\n//         const stateToChange = {};\n//         stateToChange[evt.target.id] = evt.target.value;\n//         this.setState(stateToChange);\n//     };\n\n//     /*  Local method for validation, set loadingStatus, create audience object, invoke the AudiencesManager post method, and redirect to the full audience list\n//     */\n//     constructNewAudience = evt => {\n//         evt.preventDefault();\n//         if (this.state.audience === \"\") {\n//             window.alert(\"Please input an audience\");\n//         } else {\n//             this.setState({ loadingStatus: true });\n//             const audience = {\n//                 audience: this.state.audience,\n//                 userId: parseInt(sessionStorage.getItem(\"credentials\"))\n//             };\n\n//             // Create the audience and redirect user to audience list\n//             AudiencesManager.post(audience)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//         }\n//     };\n\n//     render(){\n\n//         return(\n//             <>\n//             <form>\n//                 <fieldset>\n//                     <div className=\"formgrid\">\n//                         <input\n//                         type=\"text\"\n//                         required\n//                         onChange={this.handleFieldChange}\n//                         id=\"audience\"\n//                         placeholder=\"This Crowd Was A Buncha...\"\n//                         />\n//                         <label htmlFor=\"audience\">Audience</label>\n\n//                     </div>\n//                     <div className=\"alignRight\">\n//                         <button\n//                         type=\"button\"\n//                         disabled={this.state.loadingStatus}\n//                         onClick={this.constructNewAudience}\n//                         >Submit</button>\n//                     </div>\n//                 </fieldset>\n//             </form>\n//         </>\n//         )\n//     }\n// }\n\n// export default AudiencesForm "]},"metadata":{},"sourceType":"module"}