{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\n\nvar GigsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsForm, _Component);\n\n  function GigsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      loadingStatus: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.constructNewGig = function (evt) {\n      evt.preventDefault();\n\n      if (_this.state.gig === \"\" || _this.state.date === \"\" || _this.state.rating === \"\") {\n        window.alert(\"Please input a gig and date\");\n      } else {\n        _this.setState({\n          loadingStatus: true\n        });\n\n        var gig = {\n          gig: _this.state.gig,\n          date: _this.state.date,\n          rating: _this.state.rating,\n          venueId: _this.state.id,\n          audienceId: _this.state.id,\n          userId: parseInt(sessionStorage.getItem(\"credentials\"))\n        }; // Create the gig and redirect user to gig list\n\n        GigsManager.post(gig).then(function () {\n          return _this.props.history.push(\"/gigs\");\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      GigsManager.get(this.props.match.params.id).then(function (gig) {\n        _this2.setState({\n          id: gig.id,\n          gig: gig.name,\n          date: gig.date,\n          rating: gig.rating\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        placeholder: \"Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: \"Date Of Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"spot\",\n        placeholder: \"In What Spot Did You Perform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Spot\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"rating\",\n        placeholder: \"Rate Your Set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"city\",\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"state\",\n        placeholder: \"State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"capacity\",\n        placeholder: \"Capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Capacity\"), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewGig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsForm;\n}(Component);\n\nexport default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":["React","Component","GigsManager","GigsForm","state","gig","date","rating","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","constructNewGig","preventDefault","window","alert","venueId","audienceId","userId","parseInt","sessionStorage","getItem","post","then","props","history","push","get","match","params","name"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\n\nclass GigsForm extends Component {\n  state = {\n    gig: \"\",\n    date: \"\",\n    rating: 0,\n    loadingStatus: false\n  };\n\n  componentDidMount() {\n    GigsManager.get(this.props.match.params.id).then(gig => {\n      this.setState({\n        id: gig.id,\n        gig: gig.name,\n        date: gig.date,\n        rating: gig.rating,\n        \n      });\n    });\n  } \n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n   */\n  constructNewGig = evt => {\n    evt.preventDefault();\n    if (\n      this.state.gig === \"\" ||\n      this.state.date === \"\" ||\n      this.state.rating === \"\" \n      ) {\n        window.alert(\"Please input a gig and date\");\n    } else {\n      this.setState({ loadingStatus: true });\n      const gig = {\n        gig: this.state.gig,\n        date: this.state.date,\n        rating: this.state.rating,\n        venueId: this.state.id,\n        audienceId: this.state.id,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n      \n  \n\n      // Create the gig and redirect user to gig list\n      GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));\n\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                placeholder=\"Gig\"\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                placeholder=\"Date Of Gig\"\n              />\n              <label htmlFor=\"date\">Date</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"spot\"\n                placeholder=\"In What Spot Did You Perform\"\n              />\n              <label htmlFor=\"spot\">Spot</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"rating\"\n                placeholder=\"Rate Your Set\"\n              />\n              <label htmlFor=\"rating\">Rating</label>\n            </div>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"city\"\n              placeholder=\"City\"\n            />\n            <label htmlFor=\"city\">City</label>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"state\"\n              placeholder=\"State\"\n            />\n            <label htmlFor=\"state\">State</label>\n\n            <input\n              type=\"text\"\n              required\n              onChange={this.handleFieldChange}\n              id=\"capacity\"\n              placeholder=\"Capacity\"\n            />\n            <label htmlFor=\"capacity\">Capacity</label>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewGig}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default GigsForm;\n"]},"metadata":{},"sourceType":"module"}