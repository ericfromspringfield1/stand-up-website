{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js\";\n\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nvar loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\nGigsManager.getAll(loggedInUser).then(function (gigs) {\n  return _this.setState({\n    venues: venues\n  });\n});\n\nvar GigsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsForm, _Component);\n\n  function GigsForm() {\n    var _getPrototypeOf2;\n\n    var _this2;\n\n    _classCallCheck(this, GigsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this2 = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this2.state = {\n      gig: \"\",\n      date: \"\",\n      venues: [],\n      audience: [],\n      spot: [],\n      loadingStatus: false\n    };\n\n    _this2.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this2.setState(stateToChange);\n    };\n\n    _this2.constructNewGig = function (evt) {\n      evt.preventDefault();\n\n      if (_this2.state.gig === \"\" || _this2.state.date === \"\") {\n        window.alert(\"Please input a gig and date\");\n      } else {\n        _this2.setState({\n          loadingStatus: true\n        });\n\n        var gig = {\n          gig: _this2.state.name,\n          date: _this2.state.date,\n          venueId: _this2.state.venue.id,\n          audienceId: _this2.state.audience.id,\n          spotId: _this2.state.spot.id,\n          userId: parseInt(sessionStorage.getItem(\"credentials\"))\n        }; // Create the gig and redirect user to gig list\n\n        GigsManager.post(gig).then(function () {\n          return _this2.props.history.push(\"/gigs\");\n        });\n      }\n    };\n\n    return _this2;\n  }\n\n  _createClass(GigsForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      GigsManager.get(this.props.match.params.id).then(function (gig) {\n        _this3.setState({\n          gig: gig.name,\n          date: gig.date,\n          audience: _this3.state.audience.id,\n          spot: _this3.state.spot.id\n        });\n\n        var loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n        VenuesManager.getAll(loggedInUser).then(function (venues) {\n          return _this3.setState({\n            venues: venues\n          });\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        placeholder: \"Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: \"Date Of Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"select\", {\n        className: \"form-control\",\n        id: \"venueId\",\n        value: this.state.venueId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.state.venues.map(function (venue) {\n        return React.createElement(\"option\", {\n          key: venue.id,\n          value: venue.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, venue.name);\n      })), React.createElement(\"label\", {\n        htmlFor: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Venue\"), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewGig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsForm;\n}(Component);\n\nexport default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":["React","Component","GigsManager","VenuesManager","AudiencesManager","loggedInUser","parseInt","sessionStorage","getItem","getAll","then","gigs","setState","venues","GigsForm","state","gig","date","audience","spot","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","constructNewGig","preventDefault","window","alert","name","venueId","venue","audienceId","spotId","userId","post","props","history","push","get","match","params","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nconst loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\nGigsManager.getAll(loggedInUser).then(gigs =>\n  this.setState({ venues: venues })\n);\n\nclass GigsForm extends Component {\n  state = {\n    gig: \"\",\n    date: \"\",\n    venues: [],\n    audience: [],\n    spot: [],\n    loadingStatus: false\n  };\n  \n  componentDidMount() {\n    GigsManager.get(this.props.match.params.id).then(gig => {\n      this.setState({\n        gig: gig.name,\n        date: gig.date,\n        audience: this.state.audience.id,\n        spot: this.state.spot.id\n      });\n      const loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n      VenuesManager.getAll(loggedInUser).then(venues =>\n        this.setState({ venues: venues })\n      );\n    });\n      \n    }\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n   */\n\n  constructNewGig = evt => {\n    evt.preventDefault();\n    if (this.state.gig === \"\" || this.state.date === \"\") {\n      window.alert(\"Please input a gig and date\");\n    } else {\n      this.setState({ loadingStatus: true });\n      const gig = {\n        gig: this.state.name,\n        date: this.state.date,\n        venueId: this.state.venue.id,\n        audienceId: this.state.audience.id,\n        spotId: this.state.spot.id,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n        \n      // Create the gig and redirect user to gig list\n      GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                placeholder=\"Gig\"\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                placeholder=\"Date Of Gig\"\n              />\n              <label htmlFor=\"date\">Date</label>\n            </div>\n\n            <select\n              className=\"form-control\"\n              id=\"venueId\"\n              value={this.state.venueId}\n              onChange={this.handleFieldChange}\n            >\n              {this.state.venues.map(venue => (\n                <option key={venue.id} value={venue.id}>\n                  {venue.name}\n                </option>\n              ))}\n            </select>\n            <label htmlFor=\"venue\">Venue</label>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewGig}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default GigsForm;\n"]},"metadata":{},"sourceType":"module"}