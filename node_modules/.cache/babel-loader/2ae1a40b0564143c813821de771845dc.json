{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nvar GigsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsForm, _Component);\n\n  function GigsForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      loadingStatus: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.constructNewGig = function (evt) {\n      evt.preventDefault();\n\n      if (_this.state.gig === \"\" || _this.state.date === \"\" || _this.state.rating === \"\") {\n        window.alert(\"Please input a gig and date\");\n      } else {\n        _this.setState({\n          loadingStatus: true\n        });\n\n        var gig = {\n          gig: _this.state.gig,\n          date: _this.state.date,\n          rating: _this.state.rating,\n          userId: parseInt(sessionStorage.getItem(\"credentials\"))\n        };\n\n        constructNewVenue = function constructNewVenue(evt) {\n          evt.preventDefault();\n\n          if (_this.state.name === \"\" || _this.state.city === \"\" || _this.state.state === \"\") {\n            window.alert(\"Please input a gig and date\");\n          } else {\n            _this.setState({\n              loadingStatus: true\n            });\n\n            var venue = {\n              venue: _this.state.name,\n              city: _this.state.city,\n              state: _this.state.state,\n              capacity: _this.state.capacity,\n              userId: parseInt(sessionStorage.getItem(\"credentials\"))\n            }; // Create the gig and redirect user to gig list\n\n            GigsManager.post(gig).then(function () {\n              return _this.props.history.push(\"/gigs\");\n            }); // Create the venue and redirect user to gig list\n\n            VenuesManager.post(venue).then(function () {\n              return _this.props.history.push(\"/gigs\");\n            });\n          }\n        };\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsForm, [{\n    key: \"render\",\n    value: function render() {\n      var _React$createElement;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        placeholder: \"Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        placeholder: \"Date Of Gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Date\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"spot\",\n        placeholder: \"In What Spot Did You Perform\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Spot\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"rating\",\n        placeholder: \"Rate Your Set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Rating\")), React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"venue\",\n        placeholder: \"Name Of Venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Venue\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"city\",\n        placeholder: \"City\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"state\",\n        placeholder: \"State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"capacity\",\n        placeholder: \"Capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Capacity\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"button\", (_React$createElement = {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewGig\n      }, _defineProperty(_React$createElement, \"onClick\", this.constructNewVenue), _defineProperty(_React$createElement, \"__source\", {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      }), _defineProperty(_React$createElement, \"__self\", this), _React$createElement), \"Submit\")))));\n    }\n  }]);\n\n  return GigsForm;\n}(Component);\n\nexport default GigsForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsForm.js"],"names":["React","Component","GigsManager","VenuesManager","AudiencesManager","SpotsManager","GigsForm","state","gig","date","rating","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","constructNewGig","preventDefault","window","alert","userId","parseInt","sessionStorage","getItem","constructNewVenue","name","city","venue","capacity","post","then","props","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nclass GigsForm extends Component {\n  state = {\n    gig: \"\",\n    date: \"\",\n    rating: 0,\n    loadingStatus: false\n  };\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*  Local method for validation, set loadingStatus, create gig object, invoke the GigsManager post method, and redirect to the full gig list\n   */\n  constructNewGig = evt => {\n    evt.preventDefault();\n    if (\n      this.state.gig === \"\" ||\n      this.state.date === \"\" ||\n      this.state.rating === \"\"\n    ) {\n      window.alert(\"Please input a gig and date\");\n    } else {\n      this.setState({ loadingStatus: true });\n      const gig = {\n        gig: this.state.gig,\n        date: this.state.date,\n        rating: this.state.rating,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n\n      constructNewVenue = evt => {\n        evt.preventDefault();\n        if (\n          this.state.name === \"\" ||\n          this.state.city === \"\" ||\n          this.state.state === \"\"\n        ) {\n          window.alert(\"Please input a gig and date\");\n        } else {\n          this.setState({ loadingStatus: true });\n          const venue = {\n            venue: this.state.name,\n            city: this.state.city,\n            state: this.state.state,\n            capacity: this.state.capacity,\n            userId: parseInt(sessionStorage.getItem(\"credentials\"))\n          };\n\n          // Create the gig and redirect user to gig list\n          GigsManager.post(gig).then(() => this.props.history.push(\"/gigs\"));\n          // Create the venue and redirect user to gig list\n          VenuesManager.post(venue).then(() =>\n            this.props.history.push(\"/gigs\")\n          );\n        }\n      };\n    }\n  };\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                placeholder=\"Gig\"\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                placeholder=\"Date Of Gig\"\n              />\n              <label htmlFor=\"date\">Date</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"spot\"\n                placeholder=\"In What Spot Did You Perform\"\n              />\n              <label htmlFor=\"spot\">Spot</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"rating\"\n                placeholder=\"Rate Your Set\"\n              />\n              <label htmlFor=\"rating\">Rating</label>\n            </div>\n\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"venue\"\n                placeholder=\"Name Of Venue\"\n              />\n              <label htmlFor=\"venue\">Venue</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"city\"\n                placeholder=\"City\"\n              />\n              <label htmlFor=\"city\">City</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"state\"\n                placeholder=\"State\"\n              />\n              <label htmlFor=\"state\">State</label>\n\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"capacity\"\n                placeholder=\"Capacity\"\n              />\n              <label htmlFor=\"capacity\">Capacity</label>\n            </div>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewGig}\n                onClick={this.constructNewVenue}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default GigsForm;\n"]},"metadata":{},"sourceType":"module"}