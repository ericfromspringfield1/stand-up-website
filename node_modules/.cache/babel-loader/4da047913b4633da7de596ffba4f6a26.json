{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Spots/SpotsEditForm.js\";\nimport React, { Component } from \"react\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nvar SpotsEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpotsEditForm, _Component);\n\n  function SpotsEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpotsEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpotsEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spot: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingSpot = function (evt) {\n      evt.preventDefault();\n      var editedSpot = {\n        spot: _this.state.name,\n        id: _this.props.match.params.spotId,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n      SpotsManager.update(editedSpot).then(function () {\n        return _this.props.history.push(\"/spots\");\n      });\n\n      _this.setState({\n        loadingStatus: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SpotsEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      SpotsManager.get(this.props.match.params.spotId).then(function (spot) {\n        _this2.setState({\n          spot: spot.name,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"spot\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"Spot\")), React.createElement(\"select\", {\n        type: \"select\",\n        required: true,\n        className: \"form-control\",\n        id: \"spotId\",\n        value: this.state.spotId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, this.state.spots.map(function (spot) {\n        return React.createElement(\"option\", {\n          key: spot.id,\n          value: spot.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, spot.name);\n      }), React.createElement(\"label\", {\n        htmlFor: \"spot\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Spot\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingSpot,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return SpotsEditForm;\n}(Component);\n\nexport default SpotsEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Spots/SpotsEditForm.js"],"names":["React","Component","SpotsManager","SpotsEditForm","state","spot","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingSpot","preventDefault","editedSpot","name","props","match","params","spotId","userId","parseInt","sessionStorage","getItem","update","then","history","push","get","spots","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport SpotsManager from \"../../modules/SpotsManager\";\nimport \"./GigsForm.css\";\n\nclass SpotsEditForm extends Component {\n  //set the initial state\n  state = {\n    spot: \"\",\n    loadingStatus: true\n  };\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  updateExistingSpot = evt => {\n    evt.preventDefault();\n    const editedSpot = {\n      spot: this.state.name,\n      id: this.props.match.params.spotId,\n      userId: parseInt(sessionStorage.getItem(\"credentials\"))\n    };\n\n    SpotsManager.update(editedSpot).then(() => this.props.history.push(\"/spots\"));\n    this.setState({ loadingStatus: true });\n  };\n\n  componentDidMount() {\n    SpotsManager.get(this.props.match.params.spotId).then(spot => {\n      this.setState({\n        spot: spot.name,\n        loadingStatus: false\n      });\n    });\n  }\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"spot\"\n                value={this.state.name}\n              />\n              <label htmlFor=\"spot\">Spot</label>\n              </div>\n\n            <select\n            type=\"select\"\n            required\n              className=\"form-control\"\n              id=\"spotId\"\n              value={this.state.spotId}\n              onChange={this.handleFieldChange}\n              >\n              {this.state.spots.map(spot => (\n                <option key={spot.id} value={spot.id}>\n                  {spot.name}\n                </option>\n              ))}\n              <label htmlFor=\"spot\">Spot</label>\n              </select>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.updateExistingSpot}\n                className=\"btn btn-primary\"\n                >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n    </>\n    );\n  }\n}\n\nexport default SpotsEditForm;\n"]},"metadata":{},"sourceType":"module"}