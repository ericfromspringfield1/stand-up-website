{"ast":null,"code":"var remoteURL = \"http://localhost:8088/users\";\nexport default {\n  getUsersData: function getUsersData() {\n    return fetch(\"\".concat(remoteURL, \"/users\")).then(function (response) {\n      return response.json();\n    });\n  },\n  get: function get() {\n    return fetch(\"\".concat(remoteURL, \"/users\")).then(function (response) {\n      return response.json();\n    });\n  },\n  getUser: function getUser(id) {\n    return fetch(\"\".concat(remoteURL, \"/users/\").concat(id)).then(function (response) {\n      return response.json();\n    });\n  },\n  checkUser: function checkUser(email, password) {\n    return fetch(\"\".concat(remoteURL, \"/users?email=\").concat(email, \"&password=\").concat(password)).then(function (response) {\n      return response.json();\n    });\n  }\n};","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/modules/UsersManager.js"],"names":["remoteURL","getUsersData","fetch","then","response","json","get","getUser","id","checkUser","email","password"],"mappings":"AAAA,IAAMA,SAAS,GAAG,6BAAlB;AACA,eAAe;AACXC,EAAAA,YADW,0BACK;AAChB,WAAOC,KAAK,WAAIF,SAAJ,YAAL,CACFG,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,GAJc;AAKfC,EAAAA,GALe,iBAKR;AACH,WAAOJ,KAAK,WAAIF,SAAJ,YAAL,CACFG,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,GARc;AAUfE,EAAAA,OAVe,mBAUNC,EAVM,EAUF;AACT,WAAON,KAAK,WAAIF,SAAJ,oBAAuBQ,EAAvB,EAAL,CACFL,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH,GAbc;AAcfI,EAAAA,SAde,qBAcJC,KAdI,EAcGC,QAdH,EAca;AACxB,WAAOT,KAAK,WAAIF,SAAJ,0BAA6BU,KAA7B,uBAA+CC,QAA/C,EAAL,CACFR,IADE,CACG,UAAAC,QAAQ;AAAA,aAAIA,QAAQ,CAACC,IAAT,EAAJ;AAAA,KADX,CAAP;AAEH;AAjBc,CAAf","sourcesContent":["const remoteURL = \"http://localhost:8088/users\"\nexport default {\n    getUsersData () {\n    return fetch(`${remoteURL}/users`)\n        .then(response => response.json())\n},\nget () {\n    return fetch(`${remoteURL}/users`)\n        .then(response => response.json())\n},\n\ngetUser (id) {\n    return fetch(`${remoteURL}/users/${id}`)\n        .then(response => response.json())\n},\ncheckUser (email, password) {\n    return fetch(`${remoteURL}/users?email=${email}&password=${password}`)\n        .then(response => response.json())\n},\n}"]},"metadata":{},"sourceType":"module"}