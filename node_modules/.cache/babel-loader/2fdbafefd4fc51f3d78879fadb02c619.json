{"ast":null,"code":"// import React, { Component } from \"react\";\n// import GigsManager from \"../../modules/GigsManager\";\n// import \"./GigsForm.css\";\n// import VenuesEditForm from \"../Venues/VenuesEditForm\";\n// import VenuesManager from \"../../modules/VenuesManager\";\n// class GigsEditForm extends Component {\n//   //set the initial state\n//   state = {\n//     gig: \"\",\n//     date: \"\",\n//     venue: \"\",\n//     spot: \"\",\n//     rating: 0,\n//     loadingStatus: true\n//   };\n//   handleFieldChange = evt => {\n//     const stateToChange = {};\n//     stateToChange[evt.target.id] = evt.target.value;\n//     this.setState(stateToChange);\n//   };\n//   updateExistingGig = evt => {\n//     evt.preventDefault();\n//     const editedGig = {\n//       gig: this.state.gig,\n//       date: this.state.date,\n//       venueId: this.props.match.params.venueId,\n//       spot: this.state.spot,\n//       rating: this.state.rating,\n//       id: this.props.match.params.gigId,\n//       userId: parseInt(sessionStorage.getItem(\"credentials\"))\n//     };\n//     GigsManager.update(editedGig).then(() => this.props.history.push(\"/gigs\"));\n//     this.setState({ loadingStatus: true });\n//   };\n//   componentDidMount() {\n//     GigsManager.get(this.props.match.params.gigId).then(gig => {\n//       this.setState({\n//         gig: gig.gig,\n//         date: gig.date,\n//         venueId: gig.venueId,\n//         spot: gig.spot,\n//         rating: gig.rating,\n//         loadingStatus: false\n//       });\n//     });\n//   }\n//   render() {\n//     return (\n//       <>\n//         <form>\n//           <fieldset>\n//             <div className=\"formgrid\">\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"gig\"\n//                 value={this.state.gig}\n//               />\n//               <label htmlFor=\"gig\">Gig</label>\n//               <input\n//                 type=\"date\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"date\"\n//                 value={this.state.date}\n//               />\n//               <label htmlFor=\"date\">Date</label>\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"spot\"\n//                 value={this.state.spot}\n//               />\n//               <label htmlFor=\"spot\">Spot</label>\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"rating\"\n//                 value={this.state.rating}\n//               />\n//               <label htmlFor=\"rating\">Rating</label>\n//               </div>\n//             <select\n//             type=\"select\"\n//             required\n//               className=\"form-control\"\n//               id=\"venueId\"\n//               value={this.state.venueId}\n//               onChange={this.handleFieldChange}\n//               >\n//               {this.state.venues.map(venue => (\n//                 <option key={venue.id} value={venue.id}>\n//                   {venue.venue}\n//                 </option>\n//               ))}\n//               <label htmlFor=\"venue\">Venue</label>\n//               </select>\n//             <div className=\"alignRight\">\n//               <button\n//                 type=\"button\"\n//                 disabled={this.state.loadingStatus}\n//                 onClick={this.updateExistingGig}\n//                 className=\"btn btn-primary\"\n//                 >\n//                 Submit\n//               </button>\n//             </div>\n//           </fieldset>\n//         </form>\n//     </>\n//     );\n//   }\n// }\n// export default GigsEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsEditForm.js"],"names":[],"mappingssourcesContent":["// import React, { Component } from \"react\";\n// import GigsManager from \"../../modules/GigsManager\";\n// import \"./GigsForm.css\";\n// import VenuesEditForm from \"../Venues/VenuesEditForm\";\n// import VenuesManager from \"../../modules/VenuesManager\";\n\n// class GigsEditForm extends Component {\n//   //set the initial state\n//   state = {\n//     gig: \"\",\n//     date: \"\",\n//     venue: \"\",\n//     spot: \"\",\n//     rating: 0,\n//     loadingStatus: true\n//   };\n\n//   handleFieldChange = evt => {\n//     const stateToChange = {};\n//     stateToChange[evt.target.id] = evt.target.value;\n//     this.setState(stateToChange);\n//   };\n\n//   updateExistingGig = evt => {\n//     evt.preventDefault();\n//     const editedGig = {\n//       gig: this.state.gig,\n//       date: this.state.date,\n//       venueId: this.props.match.params.venueId,\n//       spot: this.state.spot,\n//       rating: this.state.rating,\n//       id: this.props.match.params.gigId,\n//       userId: parseInt(sessionStorage.getItem(\"credentials\"))\n//     };\n\n//     GigsManager.update(editedGig).then(() => this.props.history.push(\"/gigs\"));\n//     this.setState({ loadingStatus: true });\n//   };\n\n//   componentDidMount() {\n//     GigsManager.get(this.props.match.params.gigId).then(gig => {\n//       this.setState({\n//         gig: gig.gig,\n//         date: gig.date,\n//         venueId: gig.venueId,\n//         spot: gig.spot,\n//         rating: gig.rating,\n//         loadingStatus: false\n//       });\n//     });\n//   }\n\n//   render() {\n//     return (\n//       <>\n//         <form>\n//           <fieldset>\n//             <div className=\"formgrid\">\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"gig\"\n//                 value={this.state.gig}\n//               />\n//               <label htmlFor=\"gig\">Gig</label>\n\n//               <input\n//                 type=\"date\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"date\"\n//                 value={this.state.date}\n//               />\n//               <label htmlFor=\"date\">Date</label>\n\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"spot\"\n//                 value={this.state.spot}\n//               />\n//               <label htmlFor=\"spot\">Spot</label>\n\n//               <input\n//                 type=\"text\"\n//                 required\n//                 className=\"form-control\"\n//                 onChange={this.handleFieldChange}\n//                 id=\"rating\"\n//                 value={this.state.rating}\n//               />\n//               <label htmlFor=\"rating\">Rating</label>\n//               </div>\n\n//             <select\n//             type=\"select\"\n//             required\n//               className=\"form-control\"\n//               id=\"venueId\"\n//               value={this.state.venueId}\n//               onChange={this.handleFieldChange}\n//               >\n//               {this.state.venues.map(venue => (\n//                 <option key={venue.id} value={venue.id}>\n//                   {venue.venue}\n//                 </option>\n//               ))}\n//               <label htmlFor=\"venue\">Venue</label>\n//               </select>\n\n//             <div className=\"alignRight\">\n//               <button\n//                 type=\"button\"\n//                 disabled={this.state.loadingStatus}\n//                 onClick={this.updateExistingGig}\n//                 className=\"btn btn-primary\"\n//                 >\n//                 Submit\n//               </button>\n//             </div>\n//           </fieldset>\n//         </form>\n//     </>\n//     );\n//   }\n// }\n\n// export default GigsEditForm;\n"]},"metadata":{},"sourceType":"module"}