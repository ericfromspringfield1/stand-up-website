{"ast":null,"code":"// import React, { Component } from 'react';\n// import GigsManager from '../../modules/GigsManager';\n// import AudiencesManager from '../../modules/AudiencesManager'\n// import VenuesManager from '../../modules/VenuesManager'\n// // import SpotsManager from '../../modules/SpotsManager'\n// class AllDetails extends Component {\n//   state = {\n//       gig: \"\",\n//       date: \"\",\n//       venue: \"\",\n//     //   spot: \"\",\n//       audience: \"\",\n//       rating: 0,\n//       loadingStatus: true, \n//   }\n//   componentDidMount(){\n//     console.log(\"GigsDetail: ComponentDidMount\");\n//     //get(id) from GigsManager and hang on to the data; put it into state\n//     GigsManager.get(this.props.gigId)\n//     .then((gig) => {\n//       this.setState({\n//         gig: gig.gig,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n//   componentDidMount(){\n//     console.log(\"AudiencesDetail: ComponentDidMount\");\n//     //get(id) from AudiencesManager and hang on to the data; put it into state\n//     AudiencesManager.get(this.props.audienceId)\n//     .then((audience) => {\n//       this.setState({\n//         audience: audience.audience,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n//   componentDidMount(){\n//     console.log(\"VenuesDetail: ComponentDidMount\");\n//     //get(id) from VenuesManager and hang on to the data; put it into state\n//     VenuesManager.get(this.props.venueId)\n//     .then((venue) => {\n//       this.setState({\n//         venue: venue.venue,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n// //   componentDidMount(){\n// //     console.log(\"SpotsDetail: ComponentDidMount\");\n// //     //get(id) from SpotsManager and hang on to the data; put it into state\n// //     SpotsManager.get(this.props.spotId)\n// //     .then((spot) => {\n// //       this.setState({\n// //         spot: spot.spot,\n// //         loadingStatus: false,\n// //       });\n// //     });\n// //   }\n//   handleDelete = () => {\n//     //invoke the delete function in GigsManager and re-direct to the gig list.\n//     this.setState({loadingStatus: true})\n//     GigsManager.delete(this.props.gigId)\n//     .then(() => this.props.history.push(\"/gigs?expand=spots\"))\n// }\n//   render() {\n//     return (\n//         <>\n//       <div className=\"card\">\n//           {this.props.gig.gig} {this.props.gig.date} {this.props.venue.venue} {this.props.audience.audience} {this.props.gig.rating} \n//         <button type=\"button\" onClick={() => { this.props.history.push(`/gigs${this.props.gig.id}/edit`) (`/venues${this.props.venue.id}/edit`) (`/audiences${this.props.audience.id}`) }}>Edit</button>\n//         <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Gig</button>\n//       </div>\n//         </>\n//     );\n//   }\n// }\n// export default AllDetails;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/AllDetails.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA","sourcesContent":["// import React, { Component } from 'react';\n// import GigsManager from '../../modules/GigsManager';\n// import AudiencesManager from '../../modules/AudiencesManager'\n// import VenuesManager from '../../modules/VenuesManager'\n// // import SpotsManager from '../../modules/SpotsManager'\n\n// class AllDetails extends Component {\n\n//   state = {\n//       gig: \"\",\n//       date: \"\",\n//       venue: \"\",\n//     //   spot: \"\",\n//       audience: \"\",\n//       rating: 0,\n//       loadingStatus: true, \n//   }\n\n//   componentDidMount(){\n//     console.log(\"GigsDetail: ComponentDidMount\");\n//     //get(id) from GigsManager and hang on to the data; put it into state\n//     GigsManager.get(this.props.gigId)\n//     .then((gig) => {\n//       this.setState({\n//         gig: gig.gig,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n\n//   componentDidMount(){\n//     console.log(\"AudiencesDetail: ComponentDidMount\");\n//     //get(id) from AudiencesManager and hang on to the data; put it into state\n//     AudiencesManager.get(this.props.audienceId)\n//     .then((audience) => {\n//       this.setState({\n//         audience: audience.audience,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n\n//   componentDidMount(){\n//     console.log(\"VenuesDetail: ComponentDidMount\");\n//     //get(id) from VenuesManager and hang on to the data; put it into state\n//     VenuesManager.get(this.props.venueId)\n//     .then((venue) => {\n//       this.setState({\n//         venue: venue.venue,\n//         loadingStatus: false,\n//       });\n//     });\n//   }\n\n// //   componentDidMount(){\n// //     console.log(\"SpotsDetail: ComponentDidMount\");\n// //     //get(id) from SpotsManager and hang on to the data; put it into state\n// //     SpotsManager.get(this.props.spotId)\n// //     .then((spot) => {\n// //       this.setState({\n// //         spot: spot.spot,\n// //         loadingStatus: false,\n// //       });\n// //     });\n// //   }\n\n//   handleDelete = () => {\n//     //invoke the delete function in GigsManager and re-direct to the gig list.\n//     this.setState({loadingStatus: true})\n//     GigsManager.delete(this.props.gigId)\n//     .then(() => this.props.history.push(\"/gigs?expand=spots\"))\n// }\n\n//   render() {\n//     return (\n//         <>\n//       <div className=\"card\">\n//           {this.props.gig.gig} {this.props.gig.date} {this.props.venue.venue} {this.props.audience.audience} {this.props.gig.rating} \n//         <button type=\"button\" onClick={() => { this.props.history.push(`/gigs${this.props.gig.id}/edit`) (`/venues${this.props.venue.id}/edit`) (`/audiences${this.props.audience.id}`) }}>Edit</button>\n//         <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Gig</button>\n//       </div>\n//         </>\n        \n//     );\n//   }\n// }\n \n// export default AllDetails;"]},"metadata":{},"sourceType":"module"}