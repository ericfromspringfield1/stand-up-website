{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsEditForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\n\nvar GigsEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsEditForm, _Component);\n\n  function GigsEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      venue: \"\",\n      spot: \"\",\n      rating: 0,\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingGig = function (evt) {\n      evt.preventDefault();\n      var editedGig = {\n        gig: _this.state.gig,\n        date: _this.state.date,\n        venueId: _this.props.match.params.venueId,\n        audienceId: _this.props.match.params.audienceId,\n        spotId: _this.props.match.params.spotId,\n        id: _this.props.match.params.gigId,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n      GigsManager.update(editedGig).then(function () {\n        return _this.props.history.push(\"/gigs\");\n      });\n\n      _this.setState({\n        loadingStatus: true\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      GigsManager.get(this.props.match.params.gigId).then(function (gig) {\n        _this2.setState({\n          gig: gig.name,\n          date: gig.date,\n          venueId: gig.venue.id,\n          audience: gig.audience.id,\n          spot: gig.spot.id,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"select\", {\n        type: \"select\",\n        required: true,\n        className: \"form-control\",\n        id: \"venueId\",\n        value: this.props.match.params.venueId,\n        onChange: this.handleFieldChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, this.state.audienceChoice.map(function (audience) {\n        return React.createElement(\"option\", {\n          key: audience.id,\n          value: audience.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91\n          },\n          __self: this\n        }, audience.audienceChoice);\n      }), React.createElement(\"label\", {\n        htmlFor: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Venue\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingGig,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsEditForm;\n}(Component);\n\nexport default GigsEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsEditForm.js"],"names":["React","Component","GigsManager","GigsEditForm","state","gig","date","venue","spot","rating","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingGig","preventDefault","editedGig","venueId","props","match","params","audienceId","spotId","gigId","userId","parseInt","sessionStorage","getItem","update","then","history","push","get","name","audience","audienceChoice","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\n\nclass GigsEditForm extends Component {\n  //set the initial state\n  state = {\n    gig: \"\",\n    date: \"\",\n\n    venue: \"\",\n    spot: \"\",\n    rating: 0,\n    loadingStatus: true\n  };\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  updateExistingGig = evt => {\n    evt.preventDefault();\n    const editedGig = {\n      gig: this.state.gig,\n      date: this.state.date,\n      venueId: this.props.match.params.venueId,\n      audienceId: this.props.match.params.audienceId,\n      spotId: this.props.match.params.spotId,\n      id: this.props.match.params.gigId,\n      userId: parseInt(sessionStorage.getItem(\"credentials\"))\n    };\n\n    GigsManager.update(editedGig).then(() => this.props.history.push(\"/gigs\"));\n    this.setState({ loadingStatus: true });\n  };\n\n  componentDidMount() {\n    GigsManager.get(this.props.match.params.gigId).then(gig => {\n      this.setState({\n        gig: gig.name,\n        date: gig.date,\n        venueId: gig.venue.id,\n        audience: gig.audience.id,\n        spot: gig.spot.id,\n        loadingStatus: false\n      });\n    });\n  } \n  \n  \n  \n  \n  render() {  \n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                value={this.state.name}\n                />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                value={this.state.date}\n              />\n              <label htmlFor=\"date\">Date</label>\n              </div>\n\n            <select\n            type=\"select\"\n            required\n              className=\"form-control\"\n              id=\"venueId\"\n              value={this.props.match.params.venueId}\n              onChange={this.handleFieldChange}\n              >\n              {this.state.audienceChoice.map(audience => (\n                <option key={audience.id} value={audience.id}>\n                  {audience.audienceChoice}\n                </option>\n              ))}\n              <label htmlFor=\"venue\">Venue</label>\n              </select>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.updateExistingGig}\n                className=\"btn btn-primary\"\n                >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n    </>\n    );\n  }\n}\n\nexport default GigsEditForm;\n"]},"metadata":{},"sourceType":"module"}