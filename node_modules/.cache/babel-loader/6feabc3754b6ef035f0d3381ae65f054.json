{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Authentication/Registration.js\";\nimport React, { Component } from \"./node_modules/react\";\nimport LoginManager from \"../../modules/LoginManager\";\nimport UsersManager from \"../../modules/UsersManager\";\n\nvar Registration =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Registration, _Component);\n\n  function Registration() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Registration);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Registration)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      confirmPassword: \"\" // Update state whenever an input field is edited\n\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.createNewUser = function (evt) {\n      evt.preventDefault();\n      UsersManager.getUsersData().then(function (parsedUsers) {\n        if (parsedUsers.find(function (user) {\n          return user.username.toLowerCase() === _this.state.username.toLowerCase();\n        })) {\n          alert(\"Username already exists\");\n        } else if (parsedUsers.find(function (user) {\n          return user.email.toLowerCase() === _this.state.email.toLowerCase();\n        })) {\n          alert(\"Email already exists\");\n          console.log(_this.state.email);\n        } else if (_this.state.password !== _this.state.confirmPassword) {\n          alert(\"Passwords dont match\");\n        } else if (_this.state.username === \"\" || _this.state.email === \"\" || _this.state.password === \"\") {\n          alert(\"Please fill out all fields\");\n        } else if (!/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(_this.state.email)) {\n          alert(\"Please enter a valid email address\");\n        } else {\n          // this.setState({ loadingStatus: true });\n          var user = {\n            username: _this.state.username,\n            email: _this.state.email,\n            password: _this.state.password\n          }; // Create the user and redirect user to gigs\n\n          LoginManager.createNewUser(user).then(function () {\n            return _this.props.history.push(\"/gigs\");\n          });\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Registration, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Register\"), React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        onChange: this.handleFieldChange,\n        type: \"text\",\n        id: \"username\",\n        placeholder: \"Username\",\n        required: \"\",\n        autoFocus: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"inputUsername\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Username\"), React.createElement(\"input\", {\n        onChange: this.handleFieldChange,\n        type: \"email\",\n        id: \"email\",\n        placeholder: \"Email address\",\n        required: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"inputEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(\"input\", {\n        onChange: this.handleFieldChange,\n        type: \"password\",\n        id: \"password\",\n        placeholder: \"Password\",\n        required: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"inputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Password\"), React.createElement(\"input\", {\n        onChange: this.handleFieldChange,\n        type: \"password\",\n        id: \"confirmPassword\",\n        placeholder: \"Confirm Password\",\n        required: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"inputPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"Confirm Password\")), React.createElement(\"button\", {\n        onClick: this.createNewUser,\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Register New Account\")));\n    }\n  }]);\n\n  return Registration;\n}(Component);\n\nexport default Registration;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Authentication/Registration.js"],"names":["React","Component","LoginManager","UsersManager","Registration","state","username","email","password","confirmPassword","handleFieldChange","evt","stateToChange","target","id","value","setState","createNewUser","preventDefault","getUsersData","then","parsedUsers","find","user","toLowerCase","alert","console","log","test","props","history","push"],"mappings":"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","sourcesContent":["import React, { Component } from \"./node_modules/react\"\nimport LoginManager from \"../../modules/LoginManager\";\nimport UsersManager from \"../../modules/UsersManager\";\n\nclass Registration extends Component {\n\n    // Set initial state\n    state = {\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        confirmPassword: \"\"\n    }\n \n\n\n    // Update state whenever an input field is edited\n    handleFieldChange = (evt) => {\n        const stateToChange = {}\n        stateToChange[evt.target.id] = evt.target.value\n        this.setState(stateToChange)\n    }\n\n    // Save new user to database\n    createNewUser = evt => {\n        evt.preventDefault();\n        UsersManager.getUsersData()\n            .then(parsedUsers => {\n                if (parsedUsers.find(user => user.username.toLowerCase() === this.state.username.toLowerCase())) {\n                    alert(\"Username already exists\")\n                } else if (parsedUsers.find(user => user.email.toLowerCase() === this.state.email.toLowerCase())) {\n                    alert(\"Email already exists\")\n                    console.log(this.state.email)\n                } else if (this.state.password !== this.state.confirmPassword){\n                    alert(\"Passwords dont match\")\n                } else if (this.state.username === \"\" || this.state.email === \"\" || this.state.password === \"\") {\n                    alert(\"Please fill out all fields\")\n                } else if (!(/^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/.test(this.state.email))) {\n                    alert(\"Please enter a valid email address\")\n                }\n                else {\n                    // this.setState({ loadingStatus: true });\n                    const user = {\n                        username: this.state.username,\n                        email: this.state.email,\n                        password: this.state.password\n                    };\n\n\n                    // Create the user and redirect user to gigs\n                    LoginManager.createNewUser(user)\n                        .then(() => this.props.history.push(\"/gigs\"));\n                }\n            })\n        }\n\n\n        render() {\n            return (\n                <form>\n                    <fieldset>\n                        <h3>Register</h3>\n                        <div className=\"formgrid\">\n                            <input onChange={this.handleFieldChange} type=\"text\"\n                                id=\"username\"\n                                placeholder=\"Username\"\n                                required=\"\" autoFocus=\"\" />\n                            <label htmlFor=\"inputUsername\">Username</label>\n\n                            <input onChange={this.handleFieldChange} type=\"email\"\n                                id=\"email\"\n                                placeholder=\"Email address\"\n                                required=\"\" />\n                            <label htmlFor=\"inputEmail\">Email address</label>\n\n                            <input onChange={this.handleFieldChange} type=\"password\"\n                                id=\"password\"\n                                placeholder=\"Password\"\n                                required=\"\" />\n                            <label htmlFor=\"inputPassword\">Password</label>\n\n                            <input onChange={this.handleFieldChange} type=\"password\"\n                                id=\"confirmPassword\"\n                                placeholder=\"Confirm Password\"\n                                required=\"\" />\n                            <label htmlFor=\"inputPassword\">Confirm Password</label>\n                        </div>\n                        <button onClick={this.createNewUser} type=\"submit\">\n                            Register New Account\n                    </button>\n                    </fieldset>\n                </form>\n            )\n        }\n\n    }\n    export default Registration\n\n\n"]},"metadata":{},"sourceType":"module"}