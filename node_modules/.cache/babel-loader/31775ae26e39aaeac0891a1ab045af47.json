{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Venues/VenuesList.js\";\nimport React, { Component } from \"react\"; //import the components we will need\n\nimport VenuesCard from \"./VenuesCard\";\nimport VenuesManager from \"../../modules/VenuesManager\";\n\nvar VenuesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VenuesList, _Component);\n\n  function VenuesList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VenuesList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VenuesList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      venues: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    _this.deleteVenue = function (id) {\n      VenuesManager.delete(id).then(function () {\n        VenuesManager.getAll(_this.loggedInUser).then(function (newVenues) {\n          _this.setState({\n            venues: newVenues\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VenuesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"VENUES LIST: ComponentDidMount\"); //getAll from VenuessManager and hang on to that data; put it in state\n\n      VenuesManager.getAll(this.loggedInUser).then(function (venues) {\n        _this2.setState({\n          venues: venues //we may want to rename as venuesObj after venues: \n\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"VenuesList: Render\");\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/venues/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"Add Venue\")), React.createElement(\"div\", {\n        className: \"container-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, this.state.venues.map(function (venue) {\n        return React.createElement(VenuesCard, Object.assign({\n          key: venue.id,\n          venue: venue,\n          deleteVenue: _this3.deleteVenue\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return VenuesList;\n}(Component);\n\nexport default VenuesList;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Venues/VenuesList.js"],"names":["React","Component","VenuesCard","VenuesManager","VenuesList","state","venues","loggedInUser","parseInt","sessionStorage","getItem","deleteVenue","id","delete","then","getAll","newVenues","setState","console","log","props","history","push","map","venue"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;;IAEMC,U;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,MAAM,EAAE;AADF,K;UAGVC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;UAarBC,W,GAAc,UAAAC,EAAE,EAAI;AAClBT,MAAAA,aAAa,CAACU,MAAd,CAAqBD,EAArB,EAAyBE,IAAzB,CAA8B,YAAM;AAClCX,QAAAA,aAAa,CAACY,MAAd,CAAqB,MAAKR,YAA1B,EAAwCO,IAAxC,CAA6C,UAAAE,SAAS,EAAI;AACxD,gBAAKC,QAAL,CAAc;AACVX,YAAAA,MAAM,EAAEU;AADE,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,K;;;;;;;wCApBmB;AAAA;;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EADkB,CAElB;;AACAhB,MAAAA,aAAa,CAACY,MAAd,CAAqB,KAAKR,YAA1B,EACKO,IADL,CACU,UAAAR,MAAM,EAAI;AACZ,QAAA,MAAI,CAACW,QAAL,CAAc;AACVX,UAAAA,MAAM,EAAEA,MADE,CAElB;;AAFkB,SAAd;AAIP,OAND;AAOD;;;6BAYO;AAAA;;AACNY,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AAEA,aACI,0CACI;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAQ,QAAA,IAAI,EAAC,QAAb;AACI,QAAA,SAAS,EAAC,KADd;AAEI,QAAA,OAAO,EAAE,mBAAM;AAAC,UAAA,MAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AAAwC,SAF5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADA,CADJ,EAQI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKjB,KAAL,CAAWC,MAAX,CAAkBiB,GAAlB,CAAsB,UAAAC,KAAK;AAAA,eACxB,oBAAC,UAAD;AACK,UAAA,GAAG,EAAEA,KAAK,CAACZ,EADhB;AAEK,UAAA,KAAK,EAAEY,KAFZ;AAGM,UAAA,WAAW,EAAE,MAAI,CAACb;AAHxB,WAIU,MAAI,CAACS,KAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADwB;AAAA,OAA3B,CADL,CARJ,CADJ;AAqBC;;;;EApDoBnB,S;;AAuDzB,eAAeG,UAAf","sourcesContent":["import React, { Component } from \"react\";\n//import the components we will need\nimport VenuesCard from \"./VenuesCard\";\nimport VenuesManager from \"../../modules/VenuesManager\";\n\nclass VenuesList extends Component {\n  //define what this component needs to render\n  state = {\n    venues: []\n  };\nloggedInUser = parseInt(sessionStorage.getItem(\"credentials\"))\n  componentDidMount() {\n    console.log(\"VENUES LIST: ComponentDidMount\");\n    //getAll from VenuessManager and hang on to that data; put it in state\n    VenuesManager.getAll(this.loggedInUser)\n        .then(venues => {\n            this.setState({\n                venues: venues\n        //we may want to rename as venuesObj after venues: \n      });\n    });\n  }\n  \n  deleteVenue = id => {\n    VenuesManager.delete(id).then(() => {\n      VenuesManager.getAll(this.loggedInUser).then(newVenues => {\n        this.setState({\n            venues: newVenues\n        });\n      });\n    });\n  };\n\n  render(){\n    console.log(\"VenuesList: Render\");\n\n    return (\n        <>\n            <section className=\"section-content\">\n            <button type=\"button\"\n                className=\"btn\"\n                onClick={() => {this.props.history.push(\"/venues/new\") }}>\n                Add Venue\n            </button>\n            </section>\n            <div className=\"container-cards\">\n                {this.state.venues.map(venue => \n                    <VenuesCard \n                         key={venue.id} \n                         venue={venue}\n                          deleteVenue={this.deleteVenue} \n                          {...this.props}\n                    />\n                )}\n            </div>\n        </>\n        )\n    }\n  \n}\nexport default VenuesList; \n"]},"metadata":{},"sourceType":"module"}