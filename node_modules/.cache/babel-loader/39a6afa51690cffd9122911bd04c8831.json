{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _get$getAll$getAll$po;\n\nvar remoteURL = \"http://localhost:8088\";\nexport default (_get$getAll$getAll$po = {\n  get: function get(id) {\n    return fetch(\"\".concat(remoteURL, \"/gigs/\").concat(id)).then(function (result) {\n      return result.json();\n    });\n  },\n  getAll: function getAll(userId) {\n    return fetch(\"\".concat(remoteURL, \"/gigs?userId=\").concat(userId, \"&_expand=venue&_expand=spot&_expand=audience\")).then(function (result) {\n      return result.json();\n    }).then(function (gig) {\n      console.log(gig);\n      return gig;\n    });\n  }\n}, _defineProperty(_get$getAll$getAll$po, \"getAll\", function getAll(userIdGig) {\n  return fetch(\"\".concat(remoteURL, \"/gigs?userId=\").concat(userIdGig)).then(function (result) {\n    return result.json();\n  }).then(function (gig) {\n    console.log(gig);\n    return gig;\n  });\n}), _defineProperty(_get$getAll$getAll$po, \"post\", function post(newGig) {\n  return fetch(\"\".concat(remoteURL, \"/gigs/\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newGig)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$po, \"update\", function update(editedGig) {\n  return fetch(\"\".concat(remoteURL, \"/gigs/\").concat(editedGig.id), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(editedGig)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$po, \"delete\", function _delete(id) {\n  return fetch(\"http://localhost:8088/gigs/\".concat(id), {\n    method: \"DELETE\"\n  }).then(function (result) {\n    return result.json();\n  });\n}), _get$getAll$getAll$po);","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/modules/GigsManager.js"],"names":["remoteURL","get","id","fetch","then","result","json","getAll","userId","gig","console","log","userIdGig","newGig","method","headers","body","JSON","stringify","data","editedGig"],"mappings":";;;;AAAA,IAAMA,SAAS,GAAG,uBAAlB;AAEA;AACEC,EAAAA,GADF,eACMC,EADN,EACU;AACN,WAAOC,KAAK,WAAIH,SAAJ,mBAAsBE,EAAtB,EAAL,CAAiCE,IAAjC,CAAsC,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAA5C,CAAP;AACD,GAHH;AAIEC,EAAAA,MAJF,kBAISC,MAJT,EAIiB;AACb,WAAOL,KAAK,WAAIH,SAAJ,0BAA6BQ,MAA7B,kDAAL,CAAwFJ,IAAxF,CAA6F,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAAnG,EAAsHF,IAAtH,CAA2H,UAAAK,GAAG,EAAI;AACvIC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,aAAOA,GAAP;AACD,KAHM,CAAP;AAID;AATH,oEAUSG,SAVT,EAUoB;AAChB,SAAOT,KAAK,WAAIH,SAAJ,0BAA6BY,SAA7B,EAAL,CAA+CR,IAA/C,CAAoD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAA1D,EAA6EF,IAA7E,CAAkF,UAAAK,GAAG,EAAI;AAC9FC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACD,GAHM,CAAP;AAID,CAfH,gEAgCQI,MAhCR,EAgCgB;AACZ,SAAOV,KAAK,WAAIH,SAAJ,aAAuB;AAC/Bc,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALyB,GAAvB,CAAL,CAMJT,IANI,CAMC,UAAAe,IAAI;AAAA,WAAIA,IAAI,CAACb,IAAL,EAAJ;AAAA,GANL,CAAP;AAOH,CAxCD,oEA0CSc,SA1CT,EA0CoB;AAChB,SAAOjB,KAAK,WAAIH,SAAJ,mBAAsBoB,SAAS,CAAClB,EAAhC,GAAsC;AAChDY,IAAAA,MAAM,EAAE,KADwC;AAEhDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFuC;AAKhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,SAAf;AAL0C,GAAtC,CAAL,CAMJhB,IANI,CAMC,UAAAe,IAAI;AAAA,WAAIA,IAAI,CAACb,IAAL,EAAJ;AAAA,GANL,CAAP;AAOD,CAlDH,qEAoDSJ,EApDT,EAoDa;AACP,SAAOC,KAAK,sCAA+BD,EAA/B,GAAqC;AAC7CY,IAAAA,MAAM,EAAE;AADqC,GAArC,CAAL,CAGNV,IAHM,CAGD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAHL,CAAP;AAID,CAzDL","sourcesContent":["const remoteURL = \"http://localhost:8088\"\n\nexport default {\n  get(id) {\n    return fetch(`${remoteURL}/gigs/${id}`).then(result => result.json())\n  },\n  getAll(userId) {\n    return fetch(`${remoteURL}/gigs?userId=${userId}&_expand=venue&_expand=spot&_expand=audience`).then(result => result.json()).then(gig => { \n      console.log(gig)\n      return gig\n    })\n  },\n  getAll(userIdGig) {\n    return fetch(`${remoteURL}/gigs?userId=${userIdGig}`).then(result => result.json()).then(gig => { \n      console.log(gig)\n      return gig\n    })\n  },\n  \n\n// getWithAudiences(id) {\n//     return fetch(`${remoteURL}/gigs/${id}?_embed=audiences`)\n//             .then(result => result.json())\n// },\n\n  // getAll(userId) {\n  //   return fetch(`${remoteURL}/gigs?userId=${userId}&_expand=venue`).then(result => result.json()).then(gig => { \n  //     console.log(gig)\n  //     return gig\n  //   })\n  // },\n\n\n\n   post(newGig) {\n    return fetch(`${remoteURL}/gigs/`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newGig)\n    }).then(data => data.json())\n},\n\n  update(editedGig) {\n    return fetch(`${remoteURL}/gigs/${editedGig.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedGig)\n    }).then(data => data.json()); \n  },\n  \n  delete(id) {\n      return fetch(`http://localhost:8088/gigs/${id}`, {\n          method: \"DELETE\"\n      })\n      .then(result => result.json())\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}