{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Spots/SpotsList2.js\";\nimport React, { Component } from \"react\";\nimport SpotsCard from \"./SpotsCard\";\nimport SpotsManager from '../../modules/SpotsManager';\n\nvar SpotsList2 =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(SpotsList2, _Component);\n\n  function SpotsList2() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, SpotsList2);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(SpotsList2)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spots: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    _this.deleteSpot = function (id) {\n      SpotsManager.delete(id).then(function () {\n        AudiencesManager.getAll(_this.loggedInUser).then(function (newSpots) {\n          _this.setState({\n            spots: newSpots\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(SpotsList2, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      SpotsManager.getAll(this.loggedInUser).then(function (spots) {\n        return _this2.setState({\n          spots: spots\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/spots/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, \"Add Spot\")), this.state.spots.map(function (spot) {\n        return React.createElement(SpotsCard, {\n          id: spot.id,\n          spot: spot,\n          name: spot.name,\n          resource: \"spots\",\n          deleteSpot: _this3.deleteSpot,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return SpotsList2;\n}(Component);\n\nexport { SpotsList2 as default };","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Spots/SpotsList2.js"],"names":["React","Component","SpotsCard","SpotsManager","SpotsList2","state","spots","loggedInUser","parseInt","sessionStorage","getItem","deleteSpot","id","delete","then","AudiencesManager","getAll","newSpots","setState","props","history","push","map","spot","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;IAEqBC,U;;;;;;;;;;;;;;;;;UACnBC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;UAERC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;UAMvBC,U,GAAa,UAAAC,EAAE,EAAI;AACjBT,MAAAA,YAAY,CAACU,MAAb,CAAoBD,EAApB,EAAwBE,IAAxB,CAA6B,YAAM;AACjCC,QAAAA,gBAAgB,CAACC,MAAjB,CAAwB,MAAKT,YAA7B,EAA2CO,IAA3C,CAAgD,UAAAG,QAAQ,EAAI;AAC1D,gBAAKC,QAAL,CAAc;AACZZ,YAAAA,KAAK,EAAEW;AADK,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,K;;;;;;;wCAbmB;AAAA;;AAClBd,MAAAA,YAAY,CAACa,MAAb,CAAoB,KAAKT,YAAzB,EAAuCO,IAAvC,CAA4C,UAAAR,KAAK;AAAA,eAAI,MAAI,CAACY,QAAL,CAAc;AAAEZ,UAAAA,KAAK,EAAEA;AAAT,SAAd,CAAJ;AAAA,OAAjD;AAED;;;6BAYQ;AAAA;;AACP,aACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACa,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAaG,KAAKhB,KAAL,CAAWC,KAAX,CAAiBgB,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eAExB,oBAAC,SAAD;AAAW,UAAA,EAAE,EAAEA,IAAI,CAACX,EAApB;AAAwB,UAAA,IAAI,EAAEW,IAA9B;AAAoC,UAAA,IAAI,EAAEA,IAAI,CAACC,IAA/C;AAAqD,UAAA,QAAQ,EAAC,OAA9D;AAAsE,UAAA,UAAU,EAAE,MAAI,CAACb,UAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFwB;AAAA,OAAzB,CAbH,CADF;AAqBD;;;;EAzCqCV,S;;SAAnBG,U","sourcesContent":["import React, { Component } from \"react\";\nimport SpotsCard from \"./SpotsCard\";\nimport SpotsManager from '../../modules/SpotsManager';\n\nexport default class SpotsList2 extends Component {\n  state = { spots: [] };\n\n  loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n  componentDidMount() {\n    SpotsManager.getAll(this.loggedInUser).then(spots => this.setState({ spots: spots }))\n    \n  }\n\n  deleteSpot = id => {\n    SpotsManager.delete(id).then(() => {\n      AudiencesManager.getAll(this.loggedInUser).then(newSpots => {\n        this.setState({\n          spots: newSpots\n        });\n      });\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"section-content\">\n          <button\n            type=\"button\"\n            className=\"btn\"\n            onClick={() => {\n              this.props.history.push(\"/spots/new\");\n            }}\n          >\n            Add Spot\n          </button>\n        </section>\n\n        {this.state.spots.map(spot => (\n           \n          <SpotsCard id={spot.id} spot={spot} name={spot.name} resource=\"spots\" deleteSpot={this.deleteSpot}\n          />\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}