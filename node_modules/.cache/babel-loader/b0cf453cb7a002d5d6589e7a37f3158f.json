{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesList.js\";\nimport React, { Component } from \"react\"; //import the components we will need\n\nimport AudiencesCard from \"./AudiencesCard\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\n\nvar AudiencesList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AudiencesList, _Component);\n\n  function AudiencesList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AudiencesList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AudiencesList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      audiences: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    _this.deleteAudience = function (id) {\n      AudiencesManager.delete(id).then(function () {\n        AudiencesManager.getAll(_this.loggedInUser).then(function (newAudiences) {\n          _this.setState({\n            audiences: newAudiences\n          });\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AudiencesList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"AUDIENCE LIST: ComponentDidMount\"); //getAll from AudiencesManager and hang on to that data; put it in state\n\n      AudiencesManager.getAll(this.loggedInUser).then(function (audiences) {\n        _this2.setState({\n          audiences: audiences\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.log(\"AudiencesList: Render\");\n      return React.createElement(React.Fragment, null, React.createElement(\"section\", {\n        className: \"section-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/audiences/new\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"Add Audience\")), React.createElement(\"div\", {\n        className: \"container-cards\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, this.state.audiences.map(function (audience) {\n        return React.createElement(AudiencesCard, Object.assign({\n          key: audience.id,\n          audience: audience,\n          deleteAudience: _this3.deleteAudience\n        }, _this3.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }));\n      })));\n    }\n  }]);\n\n  return AudiencesList;\n}(Component);\n\nexport default AudiencesList;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesList.js"],"names":["React","Component","AudiencesCard","AudiencesManager","AudiencesList","state","audiences","loggedInUser","parseInt","sessionStorage","getItem","deleteAudience","id","delete","then","getAll","newAudiences","setState","console","log","props","history","push","map","audience"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;IAEMC,a;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,SAAS,EAAE;AADL,K;UAGRC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;UAWvBC,c,GAAiB,UAAAC,EAAE,EAAI;AACrBT,MAAAA,gBAAgB,CAACU,MAAjB,CAAwBD,EAAxB,EAA4BE,IAA5B,CAAiC,YAAM;AACrCX,QAAAA,gBAAgB,CAACY,MAAjB,CAAwB,MAAKR,YAA7B,EAA2CO,IAA3C,CAAgD,UAAAE,YAAY,EAAI;AAC9D,gBAAKC,QAAL,CAAc;AACZX,YAAAA,SAAS,EAAEU;AADC,WAAd;AAGD,SAJD;AAKD,OAND;AAOD,K;;;;;;;wCAlBmB;AAAA;;AAClBE,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EADkB,CAElB;;AACAhB,MAAAA,gBAAgB,CAACY,MAAjB,CAAwB,KAAKR,YAA7B,EAA2CO,IAA3C,CAAgD,UAAAR,SAAS,EAAI;AAC3D,QAAA,MAAI,CAACW,QAAL,CAAc;AACZX,UAAAA,SAAS,EAAEA;AADC,SAAd;AAGD,OAJD;AAKD;;;6BAYQ;AAAA;;AACPY,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AAEA,aACE,0CACE;AAAS,QAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,SAAS,EAAC,KAFZ;AAGE,QAAA,OAAO,EAAE,mBAAM;AACb,UAAA,MAAI,CAACC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,gBAAxB;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKjB,KAAL,CAAWC,SAAX,CAAqBiB,GAArB,CAAyB,UAAAC,QAAQ;AAAA,eAChC,oBAAC,aAAD;AACE,UAAA,GAAG,EAAEA,QAAQ,CAACZ,EADhB;AAEE,UAAA,QAAQ,EAAEY,QAFZ;AAGE,UAAA,cAAc,EAAE,MAAI,CAACb;AAHvB,WAIM,MAAI,CAACS,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADgC;AAAA,OAAjC,CADH,CAZF,CADF;AAyBD;;;;EAtDyBnB,S;;AAwD5B,eAAeG,aAAf","sourcesContent":["import React, { Component } from \"react\";\n//import the components we will need\nimport AudiencesCard from \"./AudiencesCard\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\n\nclass AudiencesList extends Component {\n  //define what this component needs to render\n  state = {\n    audiences: []\n  };\n  loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n  componentDidMount() {\n    console.log(\"AUDIENCE LIST: ComponentDidMount\");\n    //getAll from AudiencesManager and hang on to that data; put it in state\n    AudiencesManager.getAll(this.loggedInUser).then(audiences => {\n      this.setState({\n        audiences: audiences\n      });\n    });\n  }\n\n  deleteAudience = id => {\n    AudiencesManager.delete(id).then(() => {\n      AudiencesManager.getAll(this.loggedInUser).then(newAudiences => {\n        this.setState({\n          audiences: newAudiences\n        });\n      });\n    });\n  };\n\n  render() {\n    console.log(\"AudiencesList: Render\");\n\n    return (\n      <>\n        <section className=\"section-content\">\n          <button\n            type=\"button\"\n            className=\"btn\"\n            onClick={() => {\n              this.props.history.push(\"/audiences/new\");\n            }}\n          >\n            Add Audience\n          </button>\n        </section>\n        <div className=\"container-cards\">\n          {this.state.audiences.map(audience => (\n            <AudiencesCard\n              key={audience.id}\n              audience={audience}\n              deleteAudience={this.deleteAudience}\n              {...this.props}\n            />\n          ))}\n        </div>\n      </>\n    );\n  }\n}\nexport default AudiencesList;\n"]},"metadata":{},"sourceType":"module"}