{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _get$getAll$getAll$ge;\n\nvar remoteURL = \"http://localhost:8088\";\nexport default (_get$getAll$getAll$ge = {\n  get: function get(id) {\n    return fetch(\"\".concat(remoteURL, \"/audiences/\").concat(id)).then(function (result) {\n      return result.json();\n    });\n  },\n  getAll: function getAll(userId) {\n    return fetch(\"\".concat(remoteURL, \"/audiences?userId=\").concat(userId)).then(function (result) {\n      return result.json();\n    });\n  }\n}, _defineProperty(_get$getAll$getAll$ge, \"getAll\", function getAll(gigId) {\n  return fetch(\"\".concat(remoteURL, \"/audiences?gigId=\").concat(gigId)).then(function (result) {\n    return result.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"getAll\", function getAll(venueId) {\n  return fetch(\"\".concat(remoteURL, \"/audiences?venueId=\").concat(venueId)).then(function (result) {\n    return result.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"post\", function post(newAudience) {\n  return fetch(\"\".concat(remoteURL, \"/audiences\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newAudience)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"update\", function update(editedAudience) {\n  return fetch(\"\".concat(remoteURL, \"/audiences/\").concat(editedAudience.id), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(editedAudience)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$getAll$getAll$ge, \"delete\", function _delete(id) {\n  return fetch(\"http://localhost:8088/audiencess/\".concat(id), {\n    method: \"DELETE\"\n  }).then(function (result) {\n    return result.json();\n  });\n}), _get$getAll$getAll$ge);","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/modules/AudiencesManager.js"],"names":["remoteURL","get","id","fetch","then","result","json","getAll","userId","gigId","venueId","newAudience","method","headers","body","JSON","stringify","data","editedAudience"],"mappings":";;;;AAAA,IAAMA,SAAS,GAAG,uBAAlB;AAEA;AACEC,EAAAA,GADF,eACMC,EADN,EACU;AACN,WAAOC,KAAK,WAAIH,SAAJ,wBAA2BE,EAA3B,EAAL,CAAsCE,IAAtC,CAA2C,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAAjD,CAAP;AACD,GAHH;AAIEC,EAAAA,MAJF,kBAISC,MAJT,EAIiB;AACb,WAAOL,KAAK,WAAIH,SAAJ,+BAAkCQ,MAAlC,EAAL,CAAiDJ,IAAjD,CAAsD,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAA5D,CAAP;AACD;AANH,oEAOSG,KAPT,EAOgB;AACZ,SAAON,KAAK,WAAIH,SAAJ,8BAAiCS,KAAjC,EAAL,CAA+CL,IAA/C,CAAoD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAA1D,CAAP;AACD,CATH,oEAUSI,OAVT,EAUkB;AACd,SAAOP,KAAK,WAAIH,SAAJ,gCAAmCU,OAAnC,EAAL,CAAmDN,IAAnD,CAAwD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAA9D,CAAP;AACD,CAZH,gEAcOK,WAdP,EAcoB;AAChB,SAAOR,KAAK,WAAIH,SAAJ,iBAA2B;AACnCY,IAAAA,MAAM,EAAE,MAD2B;AAEnCC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAF0B;AAKnCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,WAAf;AAL6B,GAA3B,CAAL,CAMJP,IANI,CAMC,UAAAa,IAAI;AAAA,WAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,GANL,CAAP;AAOH,CAtBD,oEAwBOY,cAxBP,EAwBuB;AACnB,SAAOf,KAAK,WAAIH,SAAJ,wBAA2BkB,cAAc,CAAChB,EAA1C,GAAgD;AAC1DU,IAAAA,MAAM,EAAE,KADkD;AAE1DC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFiD;AAK1DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,cAAf;AALoD,GAAhD,CAAL,CAMJd,IANI,CAMC,UAAAa,IAAI;AAAA,WAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,GANL,CAAP;AAOD,CAhCH,qEAkCWJ,EAlCX,EAkCe;AACT,SAAOC,KAAK,4CAAqCD,EAArC,GAA2C;AACnDU,IAAAA,MAAM,EAAE;AAD2C,GAA3C,CAAL,CAGNR,IAHM,CAGD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAHL,CAAP;AAID,CAvCL","sourcesContent":["const remoteURL = \"http://localhost:8088\"\n\nexport default {\n  get(id) {\n    return fetch(`${remoteURL}/audiences/${id}`).then(result => result.json())\n  },\n  getAll(userId) {\n    return fetch(`${remoteURL}/audiences?userId=${userId}`).then(result => result.json())\n  },\n  getAll(gigId) {\n    return fetch(`${remoteURL}/audiences?gigId=${gigId}`).then(result => result.json())\n  },\n  getAll(venueId) {\n    return fetch(`${remoteURL}/audiences?venueId=${venueId}`).then(result => result.json())\n  },\n\n  post(newAudience) {\n    return fetch(`${remoteURL}/audiences`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newAudience)\n    }).then(data => data.json())\n},\n\nupdate(editedAudience) {\n    return fetch(`${remoteURL}/audiences/${editedAudience.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedAudience)\n    }).then(data => data.json());\n  },\n  \n    delete(id) {\n      return fetch(`http://localhost:8088/audiencess/${id}`, {\n          method: \"DELETE\"\n      })\n      .then(result => result.json())\n    }\n\n}"]},"metadata":{},"sourceType":"module"}