{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsDetail.js\";\nimport React, { Component } from 'react';\nimport GigsManager from '../../modules/GigsManager';\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\n\nvar GigsDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsDetail, _Component);\n\n  function GigsDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      venue: \"\",\n      audience: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleDelete = function () {\n      //invoke the delete function in GigsManager and re-direct to the gig list.\n      _this.setState({\n        loadingStatus: true\n      });\n\n      GigsManager.delete(_this.props.gigId).then(function () {\n        return _this.props.history.push(\"/gigs?expand=spots\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"GigDetail: ComponentDidMount\"); //get(id) from GigsManager and hang on to the data; put it into state\n\n      GigsManager.get(this.props.gigId).then(function (gig) {\n        _this2.setState({\n          gig: gig.gig,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      console.log(\"VenuesDetail: ComponentDidMount\"); //get(id) from VenuesManager and hang on to the data; put it into state\n\n      VenuesManager.get(this.props.venueId).then(function (venue) {\n        _this3.setState({\n          venue: venue.venue,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      console.log(\"AudiencesDetail: ComponentDidMount\"); //get(id) from AudiencesManager and hang on to the data; put it into state\n\n      AudiencesManager.get(this.props.audienceId).then(function (audience) {\n        _this4.setState({\n          audience: audience.audience,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, this.props.gig.gig, \" \", this.props.gig.date, \" \", this.props.venue.venue, \" \", this.props.venue.city, \" \", this.props.venue.state, \" \", this.props.venue.capacity, \" \", this.props.gig.rating, \" \", this.props.audience.audience, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this5.props.history.push(\"/gigs\".concat(_this5.props.gig.id, \"/edit\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, \"Delete Gig\")));\n    }\n  }]);\n\n  return GigsDetail;\n}(Component);\n\nexport default GigsDetail;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsDetail.js"],"names":["React","Component","GigsManager","VenuesManager","AudiencesManager","GigsDetail","state","gig","date","rating","venue","audience","loadingStatus","handleDelete","setState","delete","props","gigId","then","history","push","console","log","get","venueId","audienceId","city","capacity","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GigsManager from '../../modules/GigsManager';\nimport VenuesManager from \"../../modules/VenuesManager\" \nimport AudiencesManager from \"../../modules/AudiencesManager\"\n\nclass GigsDetail extends Component {\n\n  state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      venue: \"\",\n      audience: \"\",\n      loadingStatus: true, \n  }\n\n  componentDidMount(){\n    console.log(\"GigDetail: ComponentDidMount\");\n    //get(id) from GigsManager and hang on to the data; put it into state\n    GigsManager.get(this.props.gigId)\n    .then((gig) => {\n      this.setState({\n        gig: gig.gig,\n        loadingStatus: false,\n      });\n    });\n  }\n      componentDidMount(){\n        console.log(\"VenuesDetail: ComponentDidMount\");\n        //get(id) from VenuesManager and hang on to the data; put it into state\n        VenuesManager.get(this.props.venueId)\n        .then((venue) => {\n          this.setState({\n            venue: venue.venue,\n            loadingStatus: false,\n          });\n        });\n      }\n\n  componentDidMount(){\n    console.log(\"AudiencesDetail: ComponentDidMount\");\n    //get(id) from AudiencesManager and hang on to the data; put it into state\n    AudiencesManager.get(this.props.audienceId)\n    .then((audience) => {\n      this.setState({\n        audience: audience.audience,\n        loadingStatus: false,\n      });\n    });\n  }\n\n\n  handleDelete = () => {\n    //invoke the delete function in GigsManager and re-direct to the gig list.\n    this.setState({loadingStatus: true})\n    GigsManager.delete(this.props.gigId)\n    .then(() => this.props.history.push(\"/gigs?expand=spots\"))\n}\n\n  render() {\n    return (\n        <>\n      <div className=\"card\">\n          {this.props.gig.gig} {this.props.gig.date} {this.props.venue.venue} {this.props.venue.city} {this.props.venue.state} {this.props.venue.capacity} {this.props.gig.rating} {this.props.audience.audience} \n        <button type=\"button\" onClick={() => { this.props.history.push(`/gigs${this.props.gig.id}/edit`) }}>Edit</button>\n        <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Gig</button>\n      </div>\n        </>\n        \n    );\n  }\n}\n \nexport default GigsDetail;"]},"metadata":{},"sourceType":"module"}