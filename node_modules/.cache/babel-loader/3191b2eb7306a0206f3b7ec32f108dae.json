{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsEditForm.js\";\nimport React, { Component } from \"react\";\nimport GigsManager from \"../../modules/GigsManager\";\nimport \"./GigsForm.css\";\n\nvar GigsEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GigsEditForm, _Component);\n\n  function GigsEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GigsEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GigsEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingGig = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var editedGig = {\n        gig: _this.state.gig,\n        date: _this.state.date,\n        id: _this.props.match.params.gigId,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n      GigsManager.update(editedGigs).then(function () {\n        return _this.props.history.push(\"/gigs\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(GigsEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      GigsManager.get(this.props.match.params.gigId).then(function (gig) {\n        _this2.setState({\n          gig: gig.gig,\n          date: gig.date,\n          rating: gig.rating,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"gig\",\n        value: this.state.gig,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"gig\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"Gig\"), React.createElement(\"input\", {\n        type: \"date\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"date\",\n        value: this.state.date,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Date\")), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"rating\",\n        value: this.state.rating,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"rating\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Rating\"), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingGig,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return GigsEditForm;\n}(Component);\n\nexport default GigsEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Gigs/GigsEditForm.js"],"names":["React","Component","GigsManager","GigsEditForm","state","gig","date","rating","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingGig","preventDefault","editedGig","props","match","params","gigId","userId","parseInt","sessionStorage","getItem","update","editedGigs","then","history","push","get"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport GigsManager from \"../../modules/GigsManager\"\nimport \"./GigsForm.css\"\n\nclass GigsEditForm extends Component {\n    //set the initial state\n    state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      loadingStatus: true,\n    };\n\n    handleFieldChange = evt => {\n      const stateToChange = {}\n      stateToChange[evt.target.id] = evt.target.value\n      this.setState(stateToChange)\n    }\n\n    updateExistingGig = evt => {\n      evt.preventDefault()\n      this.setState({ loadingStatus: true });\n      const editedGig = {\n        gig: this.state.gig,\n        date: this.state.date,\n        id: this.props.match.params.gigId,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n\n      GigsManager.update(editedGigs)\n      .then(() => this.props.history.push(\"/gigs\"))\n    }\n\n    componentDidMount() {\n      GigsManager.get(this.props.match.params.gigId)\n      .then(gig => {\n          this.setState({\n            gig: gig.gig,\n            date: gig.date,\n            rating: gig.rating,\n            loadingStatus: false,\n          });\n      });\n    }\n\n    render() {\n      return (\n        <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"gig\"\n                value={this.state.gig}\n              />\n              <label htmlFor=\"gig\">Gig</label>\n\n              <input\n                type=\"date\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"date\"\n                value={this.state.date}\n              />\n              <label htmlFor=\"date\">Date</label>\n            </div>\n\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"rating\"\n                value={this.state.rating}\n              />\n              <label htmlFor=\"rating\">Rating</label>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\" disabled={this.state.loadingStatus}\n                onClick={this.updateExistingGig}\n                className=\"btn btn-primary\"\n              >Submit</button>\n            </div>\n          </fieldset>\n        </form>\n        </>\n      );\n    }\n}\n\nexport default GigsEditForm"]},"metadata":{},"sourceType":"module"}