{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesDetail.js\";\nimport React, { Component } from 'react';\nimport AudiencesManager from '../../modules/AudiencesManager';\n\nvar AudiencesDetail =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AudiencesDetail, _Component);\n\n  function AudiencesDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AudiencesDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AudiencesDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      audience: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleDelete = function () {\n      //invoke the delete function in AudiencesManager and re-direct to the audience list.\n      _this.setState({\n        loadingStatus: true\n      });\n\n      AudiencesManager.delete(_this.props.audienceId).then(function () {\n        return _this.props.history.push(\"/audiences\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AudiencesDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"AudienceDetail: ComponentDidMount\"); //get(id) from AudiencesManager and hang on to the data; put it into state\n\n      AudiencesManager.get(this.props.audienceId).then(function (audience) {\n        _this2.setState({\n          audience: audience.audience,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \" \", React.createElement(\"span\", {\n        style: {\n          color: 'darkslategrey'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, this.state.audience)), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this3.props.history.push(\"/audiences\".concat(_this3.props.audience.id, \"/edit\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, \"Delete Audience\")));\n    }\n  }]);\n\n  return AudiencesDetail;\n}(Component);\n\nexport default AudiencesDetail;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesDetail.js"],"names":["React","Component","AudiencesManager","AudiencesDetail","state","audience","loadingStatus","handleDelete","setState","delete","props","audienceId","then","history","push","console","log","get","color","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;IAEMC,e;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJC,MAAAA,aAAa,EAAE;AAFX,K;;UAiBRC,Y,GAAe,YAAM;AACnB;AACA,YAAKC,QAAL,CAAc;AAACF,QAAAA,aAAa,EAAE;AAAhB,OAAd;;AACAJ,MAAAA,gBAAgB,CAACO,MAAjB,CAAwB,MAAKC,KAAL,CAAWC,UAAnC,EACCC,IADD,CACM;AAAA,eAAM,MAAKF,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CAAN;AAAA,OADN;AAEH,K;;;;;;;wCAjBoB;AAAA;;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADiB,CAEjB;;AACAd,MAAAA,gBAAgB,CAACe,GAAjB,CAAqB,KAAKP,KAAL,CAAWC,UAAhC,EACCC,IADD,CACM,UAACP,QAAD,EAAc;AAClB,QAAA,MAAI,CAACG,QAAL,CAAc;AACZH,UAAAA,QAAQ,EAAEA,QAAQ,CAACA,QADP;AAEZC,UAAAA,aAAa,EAAE;AAFH,SAAd;AAID,OAND;AAOD;;;6BASQ;AAAA;;AACP,aACI,0CACF;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAK;AAAM,QAAA,KAAK,EAAE;AAAEY,UAAAA,KAAK,EAAE;AAAT,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0C,KAAKd,KAAL,CAAWC,QAArD,CAAL,CADA,EAEE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAE,mBAAM;AAAE,UAAA,MAAI,CAACK,KAAL,CAAWG,OAAX,CAAmBC,IAAnB,qBAAqC,MAAI,CAACJ,KAAL,CAAWL,QAAX,CAAoBc,EAAzD;AAAqE,SAA5G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,QAAQ,EAAE,KAAKf,KAAL,CAAWE,aAA3C;AAA0D,QAAA,OAAO,EAAE,KAAKC,YAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAHF,CADE,CADJ;AAUD;;;;EArC2BN,S;;AAwC9B,eAAeE,eAAf","sourcesContent":["import React, { Component } from 'react';\nimport AudiencesManager from '../../modules/AudiencesManager';\n\nclass AudiencesDetail extends Component {\n\n  state = {\n      audience: \"\",\n      loadingStatus: true,\n  }\n\n  componentDidMount(){\n    console.log(\"AudienceDetail: ComponentDidMount\");\n    //get(id) from AudiencesManager and hang on to the data; put it into state\n    AudiencesManager.get(this.props.audienceId)\n    .then((audience) => {\n      this.setState({\n        audience: audience.audience,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  handleDelete = () => {\n    //invoke the delete function in AudiencesManager and re-direct to the audience list.\n    this.setState({loadingStatus: true})\n    AudiencesManager.delete(this.props.audienceId)\n    .then(() => this.props.history.push(\"/audiences\"))\n}\n\n  render() {\n    return (\n        <>\n      <div className=\"card\">\n      <h3> <span style={{ color: 'darkslategrey' }}>{this.state.audience}</span></h3>\n        <button type=\"button\" onClick={() => { this.props.history.push(`/audiences${this.props.audience.id}/edit`) }}>Edit</button>\n        <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Audience</button>\n      </div>\n        </>\n        \n    );\n  }\n}\n\nexport default AudiencesDetail;"]},"metadata":{},"sourceType":"module"}