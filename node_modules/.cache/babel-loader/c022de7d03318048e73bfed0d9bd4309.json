{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/ApplicationViews.js\";\nimport { Route, withRouter, Redirect } from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport Login from './Authentication/Login';\nimport Welcome from \"./Authentication/Welcome\";\nimport Registration from \"./Authentication/Registration\";\nimport GigsList from \"./Gigs/GigsList\";\nimport GigsDetail from \"./Gigs/GigsDetail\";\nimport GigsForm from \"./Gigs/GigsForm\";\nimport GigsEditForm from \"./Gigs/GigsEditForm\";\nimport AudiencesForm from \"./Audiences/AudiencesForm\";\n\nvar ApplicationViews =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ApplicationViews, _Component);\n\n  function ApplicationViews() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ApplicationViews);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ApplicationViews)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.isAuthenticated = function () {\n      return sessionStorage.getItem(\"credentials\") !== null;\n    };\n\n    return _this;\n  }\n\n  _createClass(ApplicationViews, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: Welcome,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Registration\",\n        component: Registration,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/Login\",\n        component: Login,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/gigs\",\n        render: function render(props) {\n          if (_this2.isAuthenticated()) {\n            return React.createElement(GigsList, Object.assign({}, props, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }));\n          } else {\n            return React.createElement(Redirect, {\n              to: \"/login\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27\n              },\n              __self: this\n            });\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/gigs/:gigId(\\\\d+)\",\n        render: function render(props) {\n          // Pass the gigId to the GigsDetail Component\n          return React.createElement(GigsDetail, Object.assign({\n            gigId: parseInt(props.match.params.gigId)\n          }, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/gigs/new\",\n        render: function render(props) {\n          return React.createElement(GigsForm, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }), React.createElement(Route, {\n        exact: true,\n        path: \"/gigs/:gigId(\\\\d+)/edit\",\n        render: function render(props) {\n          return React.createElement(GigsEditForm, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/audiences/new\",\n        render: function render(props) {\n          return React.createElement(AudiencesForm, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ApplicationViews;\n}(Component);\n\nexport { ApplicationViews as default };","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/ApplicationViews.js"],"names":["Route","withRouter","Redirect","React","Component","Login","Welcome","Registration","GigsList","GigsDetail","GigsForm","GigsEditForm","AudiencesForm","ApplicationViews","isAuthenticated","sessionStorage","getItem","props","parseInt","match","params","gigId"],"mappings":"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","sourcesContent":["import { Route, withRouter, Redirect } from \"react-router-dom\"\nimport React, { Component } from \"react\";\n\nimport Login from './Authentication/Login'\nimport Welcome from \"./Authentication/Welcome\";\nimport Registration from \"./Authentication/Registration\";\nimport GigsList from \"./Gigs/GigsList\"\nimport GigsDetail from \"./Gigs/GigsDetail\"\nimport GigsForm from \"./Gigs/GigsForm\"\nimport GigsEditForm from \"./Gigs/GigsEditForm\"\nimport AudiencesForm from \"./Audiences/AudiencesForm\"\n\nexport default class ApplicationViews extends Component {\n  isAuthenticated = () => sessionStorage.getItem(\"credentials\") !== null\n\n  render() {\n    return (\n      <React.Fragment>\n        <Route exact path=\"/\" component={Welcome} />\n        <Route path=\"/Registration\" component={Registration} />\n        <Route path=\"/Login\" component={Login} />\n         \n        <Route exact path=\"/gigs\" render={props => {\n          if (this.isAuthenticated()) {\n            return <GigsList {...props} />\n          } else {\n            return <Redirect to=\"/login\" />\n          }\n        }}\n        />\n\n        <Route exact path=\"/gigs/:gigId(\\d+)\" render={props => {\n          // Pass the gigId to the GigsDetail Component\n          return <GigsDetail gigId={parseInt(props.match.params.gigId)} {...props} />\n        }} />\n\n        {/* Our shiny new route. */}\n        <Route path=\"/gigs/new\" render={(props) => {\n          return <GigsForm {...props} />\n        }} />\n\n        <Route\n          exact path=\"/gigs/:gigId(\\d+)/edit\" render={props => {\n            return <GigsEditForm {...props} />\n          }}\n        />\n\n        <Route path=\"/audiences/new\" render={(props) => {\n          return <AudiencesForm {...props} />\n        }} />\n      </React.Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}