{"ast":null,"code":"import _defineProperty from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _get$get$post$update$;\n\nvar remoteURL = \"http://localhost:8088\";\nexport default (_get$get$post$update$ = {\n  get: function get(id) {\n    return fetch(\"\".concat(remoteURL, \"/gigs/\").concat(id)).then(function (result) {\n      return result.json();\n    });\n  }\n}, _defineProperty(_get$get$post$update$, \"get\", function get(userId) {\n  return fetch(\"\".concat(remoteURL, \"/gigs?userId=\").concat(userId, \"&_expand=venue&_expand=spot&_expand=audience\")).then(function (result) {\n    return result.json();\n  }).then(function (gig) {\n    console.log(gig);\n    return gig;\n  });\n}), _defineProperty(_get$get$post$update$, \"post\", function post(newGig) {\n  return fetch(\"\".concat(remoteURL, \"/gigs/\"), {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(newGig)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$get$post$update$, \"update\", function update(editedGig) {\n  return fetch(\"\".concat(remoteURL, \"/gigs/\").concat(editedGig.id), {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(editedGig)\n  }).then(function (data) {\n    return data.json();\n  });\n}), _defineProperty(_get$get$post$update$, \"delete\", function _delete(id) {\n  return fetch(\"http://localhost:8088/gigs/\".concat(id), {\n    method: \"DELETE\"\n  }).then(function (result) {\n    return result.json();\n  });\n}), _get$get$post$update$);","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/modules/GigsManager.js"],"names":["remoteURL","get","id","fetch","then","result","json","userId","gig","console","log","newGig","method","headers","body","JSON","stringify","data","editedGig"],"mappings":";;;;AAAA,IAAMA,SAAS,GAAG,uBAAlB;AAEA;AACEC,EAAAA,GADF,eACMC,EADN,EACU;AACN,WAAOC,KAAK,WAAIH,SAAJ,mBAAsBE,EAAtB,EAAL,CAAiCE,IAAjC,CAAsC,UAAAC,MAAM;AAAA,aAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,KAA5C,CAAP;AACD;AAHH,8DAIMC,MAJN,EAIc;AACV,SAAOJ,KAAK,WAAIH,SAAJ,0BAA6BO,MAA7B,kDAAL,CAAwFH,IAAxF,CAA6F,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAAnG,EAAsHF,IAAtH,CAA2H,UAAAI,GAAG,EAAI;AACvIC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,WAAOA,GAAP;AACD,GAHM,CAAP;AAID,CATH,gEAUQG,MAVR,EAUgB;AACZ,SAAOR,KAAK,WAAIH,SAAJ,aAAuB;AAC/BY,IAAAA,MAAM,EAAE,MADuB;AAE/BC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFsB;AAK/BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf;AALyB,GAAvB,CAAL,CAMJP,IANI,CAMC,UAAAa,IAAI;AAAA,WAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,GANL,CAAP;AAOH,CAlBD,oEAoBSY,SApBT,EAoBoB;AAChB,SAAOf,KAAK,WAAIH,SAAJ,mBAAsBkB,SAAS,CAAChB,EAAhC,GAAsC;AAChDU,IAAAA,MAAM,EAAE,KADwC;AAEhDC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT,KAFuC;AAKhDC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeE,SAAf;AAL0C,GAAtC,CAAL,CAMJd,IANI,CAMC,UAAAa,IAAI;AAAA,WAAIA,IAAI,CAACX,IAAL,EAAJ;AAAA,GANL,CAAP;AAOD,CA5BH,qEA8BSJ,EA9BT,EA8Ba;AACP,SAAOC,KAAK,sCAA+BD,EAA/B,GAAqC;AAC7CU,IAAAA,MAAM,EAAE;AADqC,GAArC,CAAL,CAGNR,IAHM,CAGD,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,EAAJ;AAAA,GAHL,CAAP;AAID,CAnCL","sourcesContent":["const remoteURL = \"http://localhost:8088\"\n\nexport default {\n  get(id) {\n    return fetch(`${remoteURL}/gigs/${id}`).then(result => result.json())\n  },\n  get(userId) {\n    return fetch(`${remoteURL}/gigs?userId=${userId}&_expand=venue&_expand=spot&_expand=audience`).then(result => result.json()).then(gig => { \n      console.log(gig)\n      return gig\n    })\n  },\n   post(newGig) {\n    return fetch(`${remoteURL}/gigs/`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(newGig)\n    }).then(data => data.json())\n},\n\n  update(editedGig) {\n    return fetch(`${remoteURL}/gigs/${editedGig.id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(editedGig)\n    }).then(data => data.json()); \n  },\n  \n  delete(id) {\n      return fetch(`http://localhost:8088/gigs/${id}`, {\n          method: \"DELETE\"\n      })\n      .then(result => result.json())\n    }\n\n}\n"]},"metadata":{},"sourceType":"module"}