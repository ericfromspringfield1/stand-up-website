{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/AllDetails.js\";\nimport React, { Component } from 'react';\nimport GigsManager from '../../modules/GigsManager';\nimport AudiencesManager from '../../modules/AudienceManager';\nimport VenuesManager from '../../modules/VenuesManager';\nimport SpotsManager from '../../modules/SpotsManager';\n\nvar AllDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AllDetails, _Component);\n\n  function AllDetails() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AllDetails);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AllDetails)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      venue: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleDelete = function () {\n      //invoke the delete function in GigsManager and re-direct to the gig list.\n      _this.setState({\n        loadingStatus: true\n      });\n\n      GigsManager.delete(_this.props.gigId).then(function () {\n        return _this.props.history.push(\"/gigs?expand=spots\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AllDetails, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"GigsDetail: ComponentDidMount\"); //get(id) from GigsManager and hang on to the data; put it into state\n\n      GigsManager.get(this.props.gigId).then(function (gig) {\n        _this2.setState({\n          gig: gig.gig,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      console.log(\"AudiencesDetail: ComponentDidMount\"); //get(id) from AudiencesManager and hang on to the data; put it into state\n\n      AudiencesManager.get(this.props.audienceId).then(function (audience) {\n        _this3.setState({\n          audience: audience.audience,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this4 = this;\n\n      console.log(\"VenuesDetail: ComponentDidMount\"); //get(id) from VenuesManager and hang on to the data; put it into state\n\n      VenuesManager.get(this.props.venueId).then(function (venue) {\n        _this4.setState({\n          venue: venue.venue,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this5 = this;\n\n      console.log(\"SpotsDetail: ComponentDidMount\"); //get(id) from SpotsManager and hang on to the data; put it into state\n\n      SpotsManager.get(this.props.spotId).then(function (spot) {\n        _this5.setState({\n          spot: spot.spot,\n          loadingStatus: false\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this6 = this;\n\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", {\n        className: \"card\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, this.props.gig.gig, \" \", this.props.gig.date, \" \", this.props.gig.venueId, \" \", this.props.gig.rating, \" \", this.props.gig.spotId, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: function onClick() {\n          _this6.props.history.push(\"/gigs\".concat(_this6.props.gig.id, \"/edit\"));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Delete Gig\")));\n    }\n  }]);\n\n  return AllDetails;\n}(Component);\n\nexport default AllDetails;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/AllDetails.js"],"names":["React","Component","GigsManager","AudiencesManager","VenuesManager","SpotsManager","AllDetails","state","gig","date","rating","venue","loadingStatus","handleDelete","setState","delete","props","gigId","then","history","push","console","log","get","audienceId","audience","venueId","spotId","spot","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport GigsManager from '../../modules/GigsManager';\nimport AudiencesManager from '../../modules/AudienceManager'\nimport VenuesManager from '../../modules/VenuesManager'\nimport SpotsManager from '../../modules/SpotsManager'\n\nclass AllDetails extends Component {\n\n  state = {\n      gig: \"\",\n      date: \"\",\n      rating: 0,\n      venue: \"\",\n      loadingStatus: true, \n  }\n\n  componentDidMount(){\n    console.log(\"GigsDetail: ComponentDidMount\");\n    //get(id) from GigsManager and hang on to the data; put it into state\n    GigsManager.get(this.props.gigId)\n    .then((gig) => {\n      this.setState({\n        gig: gig.gig,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  componentDidMount(){\n    console.log(\"AudiencesDetail: ComponentDidMount\");\n    //get(id) from AudiencesManager and hang on to the data; put it into state\n    AudiencesManager.get(this.props.audienceId)\n    .then((audience) => {\n      this.setState({\n        audience: audience.audience,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  componentDidMount(){\n    console.log(\"VenuesDetail: ComponentDidMount\");\n    //get(id) from VenuesManager and hang on to the data; put it into state\n    VenuesManager.get(this.props.venueId)\n    .then((venue) => {\n      this.setState({\n        venue: venue.venue,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  componentDidMount(){\n    console.log(\"SpotsDetail: ComponentDidMount\");\n    //get(id) from SpotsManager and hang on to the data; put it into state\n    SpotsManager.get(this.props.spotId)\n    .then((spot) => {\n      this.setState({\n        spot: spot.spot,\n        loadingStatus: false,\n      });\n    });\n  }\n\n  handleDelete = () => {\n    //invoke the delete function in GigsManager and re-direct to the gig list.\n    this.setState({loadingStatus: true})\n    GigsManager.delete(this.props.gigId)\n    .then(() => this.props.history.push(\"/gigs?expand=spots\"))\n}\n\n  render() {\n    return (\n        <>\n      <div className=\"card\">\n          {this.props.gig.gig} {this.props.gig.date} {this.props.gig.venueId} {this.props.gig.rating} {this.props.gig.spotId} \n        <button type=\"button\" onClick={() => { this.props.history.push(`/gigs${this.props.gig.id}/edit`) }}>Edit</button>\n        <button type=\"button\" disabled={this.state.loadingStatus} onClick={this.handleDelete}>Delete Gig</button>\n      </div>\n        </>\n        \n    );\n  }\n}\n \nexport default AllDetails;"]},"metadata":{},"sourceType":"module"}