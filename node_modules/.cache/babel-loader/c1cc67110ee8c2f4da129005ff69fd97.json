{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Venues/VenuesEditForm.js\";\nimport React, { Component } from \"react\";\nimport VenuesManager from \"../../modules/VenuesManager\";\nimport \"./VenuesForm.css\";\n\nvar VenuesEditForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(VenuesEditForm, _Component);\n\n  function VenuesEditForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, VenuesEditForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(VenuesEditForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      capacity: \"\",\n      userId: \"\",\n      loadingStatus: true\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.updateExistingVenue = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var editedVenue = {\n        name: _this.state.venue,\n        city: _this.state.city,\n        state: _this.state.state,\n        id: parseInt(_this.props.match.params.venueId),\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n      VenuesManager.update(editedVenue).then(function () {\n        return _this.props.history.push(\"/venues\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(VenuesEditForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      VenuesManager.getAll().then(function (venues) {\n        return _this2.setState({\n          venues: venues\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        value: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"venue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Venue\"), React.createElement(\"input\", {\n        type: \"city\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"city\",\n        value: this.state.city,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"city\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"state\",\n        value: this.state.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"state\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        className: \"form-control\",\n        onChange: this.handleFieldChange,\n        id: \"capacity\",\n        value: this.state.capacity,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"capacity\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Capacity\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.updateExistingVenue,\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return VenuesEditForm;\n}(Component);\n\nexport default VenuesEditForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Venues/VenuesEditForm.js"],"names":["React","Component","VenuesManager","VenuesEditForm","state","name","city","capacity","userId","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","updateExistingVenue","preventDefault","editedVenue","venue","parseInt","props","match","params","venueId","sessionStorage","getItem","update","then","history","push","getAll","venues"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport VenuesManager from \"../../modules/VenuesManager\"\nimport \"./VenuesForm.css\"\n\nclass VenuesEditForm extends Component {\n    //set the initial state\n    state = {\n      name: \"\",\n      city: \"\",\n      state: \"\",\n      capacity: \"\",\n      userId: \"\",\n      loadingStatus: true,\n    };\n\n    handleFieldChange = evt => {\n      const stateToChange = {}\n      stateToChange[evt.target.id] = evt.target.value\n      this.setState(stateToChange)\n    }\n\n    updateExistingVenue = evt => {\n      evt.preventDefault()\n      this.setState({ loadingStatus: true });\n      const editedVenue = {\n        name: this.state.venue,\n        city: this.state.city,\n        state: this.state.state,\n        id: parseInt(this.props.match.params.venueId),\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n\n      VenuesManager.update(editedVenue)\n      .then(() => this.props.history.push(\"/venues\"))\n    }\n\n    componentDidMount() {\n      VenuesManager.getAll().then(venues =>\n        this.setState({ venues: venues })\n        );\n   }\n    \n    render() {\n      return (\n        <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"name\"\n                value={this.state.name}\n              />\n              <label htmlFor=\"venue\">Venue</label>\n\n              <input\n                type=\"city\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"city\"\n                value={this.state.city}\n              />\n              <label htmlFor=\"city\">City</label>\n\n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"state\"\n                value={this.state.state}\n                />\n              <label htmlFor=\"state\">State</label>\n              \n              <input\n                type=\"text\"\n                required\n                className=\"form-control\"\n                onChange={this.handleFieldChange}\n                id=\"capacity\"\n                value={this.state.capacity}\n                />\n              <label htmlFor=\"capacity\">Capacity</label>\n            </div> \n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\" disabled={this.state.loadingStatus}\n                onClick={this.updateExistingVenue}\n                className=\"btn btn-primary\"\n                >Submit</button>\n            </div>\n          </fieldset>\n        </form>\n        </>\n      ); \n    }\n}\n\nexport default VenuesEditForm"]},"metadata":{},"sourceType":"module"}