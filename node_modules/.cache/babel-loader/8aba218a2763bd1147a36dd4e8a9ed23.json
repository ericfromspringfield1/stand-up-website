{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/List/GenericSpotsList.js\";\nimport React, { Component } from \"react\";\nimport DetailCard from \"../Presentation/DetailCard\";\nimport SpotsManager from '../../modules/SpotsManager';\n\nvar GenericSpotsList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(GenericSpotsList, _Component);\n\n  function GenericSpotsList() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, GenericSpotsList);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(GenericSpotsList)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      spots: []\n    };\n    _this.loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n    return _this;\n  }\n\n  _createClass(GenericSpotsList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      console.log(\"TASK LIST: ComponentDidMount\"); //getAll from TasksManager and hang on to that data; put it in state\n\n      SpotsManager.getAll(this.loggedInUser).then(function (spots) {\n        _this2.setState({\n          spots: spots\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, this.state.spots.map(function (spot) {\n        return React.createElement(DetailCard, {\n          key: spot.id,\n          spotName: spot.name,\n          resource: \"spots\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        });\n      }));\n    }\n  }]);\n\n  return GenericSpotsList;\n}(Component);\n\nexport { GenericSpotsList as default };","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/List/GenericSpotsList.js"],"names":["React","Component","DetailCard","SpotsManager","GenericSpotsList","state","spots","loggedInUser","parseInt","sessionStorage","getItem","console","log","getAll","then","setState","map","spot","id","name"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;;IAGqBC,gB;;;;;;;;;;;;;;;;;UACjBC,K,GAAQ;AAAEC,MAAAA,KAAK,EAAE;AAAT,K;UACRC,Y,GAAeC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD,C;;;;;;wCAEH;AAAA;;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ,EADgB,CAEhB;;AACAT,MAAAA,YAAY,CAACU,MAAb,CAAoB,KAAKN,YAAzB,EACKO,IADL,CACU,UAAAR,KAAK,EAAI;AACX,QAAA,MAAI,CAACS,QAAL,CAAc;AACVT,UAAAA,KAAK,EAAEA;AADG,SAAd;AAGP,OALD;AAMD;;;6BAEM;AACL,aACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKD,KAAL,CAAWC,KAAX,CAAiBU,GAAjB,CAAqB,UAAAC,IAAI;AAAA,eACrB,oBAAC,UAAD;AAAY,UAAA,GAAG,EAAEA,IAAI,CAACC,EAAtB;AACY,UAAA,QAAQ,EAAED,IAAI,CAACE,IAD3B;AAEY,UAAA,QAAQ,EAAC,OAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADqB;AAAA,OAAzB,CAFR,CADJ;AAWH;;;;EA3ByClB,S;;SAAzBG,gB","sourcesContent":["import React, { Component } from \"react\"\nimport DetailCard from \"../Presentation/DetailCard\";\nimport SpotsManager from '../../modules/SpotsManager'\n\n\nexport default class GenericSpotsList extends Component {\n    state = { spots: [] }\n    loggedInUser = parseInt(sessionStorage.getItem(\"credentials\"));\n\n    componentDidMount() {\n        console.log(\"TASK LIST: ComponentDidMount\");\n        //getAll from TasksManager and hang on to that data; put it in state\n        SpotsManager.getAll(this.loggedInUser)\n            .then(spots => {\n                this.setState({\n                    spots: spots  \n          });\n        });\n      }\n\n    render() {\n        return (\n            <React.Fragment>\n                {\n                    this.state.spots.map(spot =>\n                        <DetailCard key={spot.id}\n                                    spotName={spot.name}\n                                    resource=\"spots\" />\n                    )\n                }\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}