{"ast":null,"code":"import _classCallCheck from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesForm.js\";\n// import React, { Component } from \"react\";\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n// class AudiencesForm extends Component {\n//   constructor() {\n//     super();\n//     this.state = {\n//       showMenu: false\n//     };\n//     this.showMenu = this.showMenu.bind(this);\n//   }\n//   showMenu(event) {\n//     event.preventDefault();\n//     this.setState({\n//       showMenu: true\n//     });\n//     AudiencesManager.post(event)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <button>Show menu</button>\n//           <div className=\"menu\">\n//             <button> Hot </button>\n//             <button> Cold</button>\n//             <button> Corporate </button>\n//             <button> Sparse </button>\n//             <button> Engaged </button>\n//             <button> A Buncha Drunks </button>\n//             <button> A Buncha Hecklers </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\nimport React, { Component } from \"react\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport \"./AudiencesForm.css\";\n\nvar AudiencesForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AudiencesForm, _Component);\n\n  function AudiencesForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AudiencesForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AudiencesForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      audience: \"\",\n      loadingStatus: false\n    };\n\n    _this.handleFieldChange = function (evt) {\n      var stateToChange = {};\n      stateToChange[evt.target.id] = evt.target.value;\n\n      _this.setState(stateToChange);\n    };\n\n    _this.constructNewAudience = function (evt) {\n      evt.preventDefault();\n\n      _this.setState({\n        loadingStatus: true\n      });\n\n      var audience = {\n        audience: _this.state.name,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      }; // Create the audience and redirect user to audience list\n\n      AudiencesManager.post(audience).then(function () {\n        return _this.props.history.push(\"/audiences\");\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AudiencesForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      AudiencesManager.get(this.props.match.params.id).then(function (audience) {\n        _this2.setState({\n          audience: audience.name\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(React.Fragment, null, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"fieldset\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"formgrid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        required: true,\n        onChange: this.handleFieldChange,\n        id: \"name\",\n        placeholder: \"This Crowd Was A Buncha...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        htmlFor: \"audience\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \"Audience\")), React.createElement(\"div\", {\n        className: \"alignRight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        disabled: this.state.loadingStatus,\n        onClick: this.constructNewAudience,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Submit\")))));\n    }\n  }]);\n\n  return AudiencesForm;\n}(Component);\n\nexport default AudiencesForm;","map":{"version":3,"sources":["/Users/erictaylor/workspace/capstone-front-end/reactive-nutshell-ain-t-salty/src/components/Audiences/AudiencesForm.js"],"names":["React","Component","AudiencesManager","AudiencesForm","state","audience","loadingStatus","handleFieldChange","evt","stateToChange","target","id","value","setState","constructNewAudience","preventDefault","name","userId","parseInt","sessionStorage","getItem","post","then","props","history","push","get","match","params"],"mappings":";;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAO,qBAAP;;IAEMC,a;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,aAAa,EAAE;AAFT,K;;UAaRC,iB,GAAoB,UAAAC,GAAG,EAAI;AACzB,UAAMC,aAAa,GAAG,EAAtB;AACAA,MAAAA,aAAa,CAACD,GAAG,CAACE,MAAJ,CAAWC,EAAZ,CAAb,GAA+BH,GAAG,CAACE,MAAJ,CAAWE,KAA1C;;AACA,YAAKC,QAAL,CAAcJ,aAAd;AACD,K;;UAIDK,oB,GAAuB,UAAAN,GAAG,EAAI;AAC5BA,MAAAA,GAAG,CAACO,cAAJ;;AAEE,YAAKF,QAAL,CAAc;AAAEP,QAAAA,aAAa,EAAE;AAAjB,OAAd;;AACA,UAAMD,QAAQ,GAAG;AACfA,QAAAA,QAAQ,EAAE,MAAKD,KAAL,CAAWY,IADN;AAEfC,QAAAA,MAAM,EAAEC,QAAQ,CAACC,cAAc,CAACC,OAAf,CAAuB,aAAvB,CAAD;AAFD,OAAjB,CAJ0B,CAS1B;;AACAlB,MAAAA,gBAAgB,CAACmB,IAAjB,CAAsBhB,QAAtB,EAAgCiB,IAAhC,CAAqC;AAAA,eACnC,MAAKC,KAAL,CAAWC,OAAX,CAAmBC,IAAnB,CAAwB,YAAxB,CADmC;AAAA,OAArC;AAGD,K;;;;;;;wCA7BiB;AAAA;;AAClBvB,MAAAA,gBAAgB,CAACwB,GAAjB,CAAqB,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBjB,EAA7C,EAAiDW,IAAjD,CAAsD,UAAAjB,QAAQ,EAAI;AAChE,QAAA,MAAI,CAACQ,QAAL,CAAc;AACZR,UAAAA,QAAQ,EAAEA,QAAQ,CAACW;AADP,SAAd;AAGD,OAJD;AAKD;;;6BAyBQ;AACP,aACE,0CACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,QAAQ,MAFV;AAGE,QAAA,QAAQ,EAAE,KAAKT,iBAHjB;AAIE,QAAA,EAAE,EAAC,MAJL;AAKE,QAAA,WAAW,EAAC,4BALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAQE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF,EAYE;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWE,aAFvB;AAGE,QAAA,OAAO,EAAE,KAAKQ,oBAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CAZF,CADF,CADF,CADF;AA4BD;;;;EAlEyBb,S;;AAqE5B,eAAeE,aAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import AudiencesManager from '../../modules/AudiencesManager';\n// import './AudiencesForm.css'\n\n// class AudiencesForm extends Component {\n//   constructor() {\n//     super();\n\n//     this.state = {\n//       showMenu: false\n//     };\n//     this.showMenu = this.showMenu.bind(this);\n//   }\n//   showMenu(event) {\n//     event.preventDefault();\n\n//     this.setState({\n//       showMenu: true\n\n//     });\n\n//     AudiencesManager.post(event)\n//             .then(() => this.props.history.push(\"/audiences\"));\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <button>Show menu</button>\n//           <div className=\"menu\">\n//             <button> Hot </button>\n//             <button> Cold</button>\n//             <button> Corporate </button>\n//             <button> Sparse </button>\n//             <button> Engaged </button>\n//             <button> A Buncha Drunks </button>\n//             <button> A Buncha Hecklers </button>\n//           </div>\n//         )}\n//       </div>\n//     );\n//   }\n// }\n\nimport React, { Component } from \"react\";\nimport AudiencesManager from \"../../modules/AudiencesManager\";\nimport \"./AudiencesForm.css\";\n\nclass AudiencesForm extends Component {\n  state = {\n    audience: \"\",\n    loadingStatus: false\n  };\n\n  componentDidMount() {\n    AudiencesManager.get(this.props.match.params.id).then(audience => {\n      this.setState({\n        audience: audience.name\n      });\n    });\n  }\n\n  handleFieldChange = evt => {\n    const stateToChange = {};\n    stateToChange[evt.target.id] = evt.target.value;\n    this.setState(stateToChange);\n  };\n\n  /*  Local method for validation, set loadingStatus, create audience object, invoke the AudiencesManager post method, and redirect to the full audience list\n   */\n  constructNewAudience = evt => {\n    evt.preventDefault();\n  \n      this.setState({ loadingStatus: true });\n      const audience = {\n        audience: this.state.name,\n        userId: parseInt(sessionStorage.getItem(\"credentials\"))\n      };\n\n      // Create the audience and redirect user to audience list\n      AudiencesManager.post(audience).then(() =>\n        this.props.history.push(\"/audiences\")\n      );\n    }\n\n  render() {\n    return (\n      <>\n        <form>\n          <fieldset>\n            <div className=\"formgrid\">\n              <input\n                type=\"text\"\n                required\n                onChange={this.handleFieldChange}\n                id=\"name\"\n                placeholder=\"This Crowd Was A Buncha...\"\n              />\n              <label htmlFor=\"audience\">Audience</label>\n            </div>\n\n            <div className=\"alignRight\">\n              <button\n                type=\"button\"\n                disabled={this.state.loadingStatus}\n                onClick={this.constructNewAudience}\n              >\n                Submit\n              </button>\n            </div>\n          </fieldset>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default AudiencesForm;\n"]},"metadata":{},"sourceType":"module"}